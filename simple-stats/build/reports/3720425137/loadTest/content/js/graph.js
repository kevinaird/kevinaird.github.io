/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 131328.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 5.0], [29.2, 5.0], [29.3, 5.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 6.0], [32.1, 6.0], [32.2, 6.0], [32.3, 6.0], [32.4, 6.0], [32.5, 6.0], [32.6, 6.0], [32.7, 6.0], [32.8, 6.0], [32.9, 6.0], [33.0, 6.0], [33.1, 6.0], [33.2, 6.0], [33.3, 6.0], [33.4, 6.0], [33.5, 6.0], [33.6, 6.0], [33.7, 6.0], [33.8, 6.0], [33.9, 6.0], [34.0, 6.0], [34.1, 6.0], [34.2, 6.0], [34.3, 6.0], [34.4, 6.0], [34.5, 6.0], [34.6, 6.0], [34.7, 6.0], [34.8, 6.0], [34.9, 6.0], [35.0, 7.0], [35.1, 7.0], [35.2, 7.0], [35.3, 7.0], [35.4, 7.0], [35.5, 7.0], [35.6, 7.0], [35.7, 7.0], [35.8, 7.0], [35.9, 7.0], [36.0, 7.0], [36.1, 7.0], [36.2, 7.0], [36.3, 7.0], [36.4, 7.0], [36.5, 7.0], [36.6, 7.0], [36.7, 7.0], [36.8, 7.0], [36.9, 7.0], [37.0, 7.0], [37.1, 7.0], [37.2, 7.0], [37.3, 7.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 8.0], [38.6, 8.0], [38.7, 8.0], [38.8, 8.0], [38.9, 8.0], [39.0, 8.0], [39.1, 8.0], [39.2, 8.0], [39.3, 8.0], [39.4, 8.0], [39.5, 8.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 10.0], [41.7, 10.0], [41.8, 10.0], [41.9, 10.0], [42.0, 10.0], [42.1, 10.0], [42.2, 10.0], [42.3, 10.0], [42.4, 10.0], [42.5, 10.0], [42.6, 10.0], [42.7, 10.0], [42.8, 10.0], [42.9, 10.0], [43.0, 10.0], [43.1, 10.0], [43.2, 11.0], [43.3, 11.0], [43.4, 11.0], [43.5, 11.0], [43.6, 11.0], [43.7, 11.0], [43.8, 11.0], [43.9, 11.0], [44.0, 11.0], [44.1, 11.0], [44.2, 11.0], [44.3, 11.0], [44.4, 11.0], [44.5, 11.0], [44.6, 12.0], [44.7, 12.0], [44.8, 12.0], [44.9, 12.0], [45.0, 12.0], [45.1, 12.0], [45.2, 12.0], [45.3, 12.0], [45.4, 12.0], [45.5, 12.0], [45.6, 12.0], [45.7, 12.0], [45.8, 12.0], [45.9, 12.0], [46.0, 13.0], [46.1, 13.0], [46.2, 13.0], [46.3, 13.0], [46.4, 13.0], [46.5, 13.0], [46.6, 13.0], [46.7, 13.0], [46.8, 13.0], [46.9, 13.0], [47.0, 13.0], [47.1, 13.0], [47.2, 14.0], [47.3, 14.0], [47.4, 14.0], [47.5, 14.0], [47.6, 14.0], [47.7, 14.0], [47.8, 14.0], [47.9, 14.0], [48.0, 14.0], [48.1, 14.0], [48.2, 15.0], [48.3, 15.0], [48.4, 15.0], [48.5, 15.0], [48.6, 15.0], [48.7, 15.0], [48.8, 15.0], [48.9, 15.0], [49.0, 15.0], [49.1, 15.0], [49.2, 16.0], [49.3, 16.0], [49.4, 16.0], [49.5, 16.0], [49.6, 16.0], [49.7, 16.0], [49.8, 16.0], [49.9, 16.0], [50.0, 16.0], [50.1, 16.0], [50.2, 17.0], [50.3, 17.0], [50.4, 17.0], [50.5, 17.0], [50.6, 17.0], [50.7, 17.0], [50.8, 17.0], [50.9, 17.0], [51.0, 18.0], [51.1, 18.0], [51.2, 18.0], [51.3, 18.0], [51.4, 18.0], [51.5, 18.0], [51.6, 18.0], [51.7, 19.0], [51.8, 19.0], [51.9, 19.0], [52.0, 19.0], [52.1, 19.0], [52.2, 19.0], [52.3, 19.0], [52.4, 20.0], [52.5, 20.0], [52.6, 20.0], [52.7, 20.0], [52.8, 20.0], [52.9, 20.0], [53.0, 21.0], [53.1, 21.0], [53.2, 21.0], [53.3, 21.0], [53.4, 21.0], [53.5, 21.0], [53.6, 22.0], [53.7, 22.0], [53.8, 22.0], [53.9, 22.0], [54.0, 23.0], [54.1, 23.0], [54.2, 23.0], [54.3, 23.0], [54.4, 24.0], [54.5, 24.0], [54.6, 24.0], [54.7, 24.0], [54.8, 25.0], [54.9, 25.0], [55.0, 25.0], [55.1, 26.0], [55.2, 26.0], [55.3, 26.0], [55.4, 27.0], [55.5, 27.0], [55.6, 27.0], [55.7, 27.0], [55.8, 28.0], [55.9, 28.0], [56.0, 28.0], [56.1, 29.0], [56.2, 29.0], [56.3, 30.0], [56.4, 30.0], [56.5, 31.0], [56.6, 31.0], [56.7, 31.0], [56.8, 32.0], [56.9, 33.0], [57.0, 33.0], [57.1, 34.0], [57.2, 34.0], [57.3, 35.0], [57.4, 36.0], [57.5, 36.0], [57.6, 37.0], [57.7, 38.0], [57.8, 39.0], [57.9, 39.0], [58.0, 40.0], [58.1, 41.0], [58.2, 42.0], [58.3, 43.0], [58.4, 44.0], [58.5, 45.0], [58.6, 46.0], [58.7, 47.0], [58.8, 48.0], [58.9, 49.0], [59.0, 51.0], [59.1, 52.0], [59.2, 54.0], [59.3, 55.0], [59.4, 56.0], [59.5, 58.0], [59.6, 59.0], [59.7, 61.0], [59.8, 63.0], [59.9, 64.0], [60.0, 66.0], [60.1, 68.0], [60.2, 70.0], [60.3, 72.0], [60.4, 74.0], [60.5, 76.0], [60.6, 78.0], [60.7, 79.0], [60.8, 81.0], [60.9, 83.0], [61.0, 86.0], [61.1, 88.0], [61.2, 91.0], [61.3, 94.0], [61.4, 96.0], [61.5, 100.0], [61.6, 104.0], [61.7, 109.0], [61.8, 114.0], [61.9, 119.0], [62.0, 122.0], [62.1, 126.0], [62.2, 132.0], [62.3, 137.0], [62.4, 148.0], [62.5, 156.0], [62.6, 162.0], [62.7, 168.0], [62.8, 174.0], [62.9, 178.0], [63.0, 186.0], [63.1, 189.0], [63.2, 197.0], [63.3, 206.0], [63.4, 229.0], [63.5, 251.0], [63.6, 323.0], [63.7, 368.0], [63.8, 1005.0], [63.9, 1009.0], [64.0, 1013.0], [64.1, 1016.0], [64.2, 1018.0], [64.3, 1020.0], [64.4, 1021.0], [64.5, 1023.0], [64.6, 1025.0], [64.7, 1026.0], [64.8, 1028.0], [64.9, 1030.0], [65.0, 1031.0], [65.1, 1032.0], [65.2, 1035.0], [65.3, 1036.0], [65.4, 1038.0], [65.5, 1040.0], [65.6, 1043.0], [65.7, 1045.0], [65.8, 1050.0], [65.9, 1054.0], [66.0, 1062.0], [66.1, 1083.0], [66.2, 1113.0], [66.3, 1120.0], [66.4, 1164.0], [66.5, 1175.0], [66.6, 1193.0], [66.7, 1215.0], [66.8, 1247.0], [66.9, 1273.0], [67.0, 1278.0], [67.1, 1304.0], [67.2, 1327.0], [67.3, 1370.0], [67.4, 2065.0], [67.5, 3028.0], [67.6, 3036.0], [67.7, 3042.0], [67.8, 3046.0], [67.9, 3053.0], [68.0, 3064.0], [68.1, 14340.0], [68.2, 63491.0], [68.3, 65579.0], [68.4, 128208.0], [68.5, 128244.0], [68.6, 128278.0], [68.7, 128316.0], [68.8, 128352.0], [68.9, 128382.0], [69.0, 128418.0], [69.1, 128449.0], [69.2, 128477.0], [69.3, 128516.0], [69.4, 128548.0], [69.5, 128584.0], [69.6, 128624.0], [69.7, 128661.0], [69.8, 128685.0], [69.9, 128705.0], [70.0, 128739.0], [70.1, 128768.0], [70.2, 128812.0], [70.3, 128849.0], [70.4, 128883.0], [70.5, 128917.0], [70.6, 128954.0], [70.7, 128969.0], [70.8, 128979.0], [70.9, 128989.0], [71.0, 128996.0], [71.1, 129001.0], [71.2, 129006.0], [71.3, 129009.0], [71.4, 129011.0], [71.5, 129012.0], [71.6, 129013.0], [71.7, 129014.0], [71.8, 129015.0], [71.9, 129016.0], [72.0, 129017.0], [72.1, 129018.0], [72.2, 129018.0], [72.3, 129019.0], [72.4, 129019.0], [72.5, 129020.0], [72.6, 129020.0], [72.7, 129021.0], [72.8, 129021.0], [72.9, 129021.0], [73.0, 129022.0], [73.1, 129022.0], [73.2, 129022.0], [73.3, 129023.0], [73.4, 129023.0], [73.5, 129023.0], [73.6, 129024.0], [73.7, 129024.0], [73.8, 129024.0], [73.9, 129024.0], [74.0, 129025.0], [74.1, 129025.0], [74.2, 129025.0], [74.3, 129026.0], [74.4, 129026.0], [74.5, 129027.0], [74.6, 129027.0], [74.7, 129027.0], [74.8, 129028.0], [74.9, 129028.0], [75.0, 129028.0], [75.1, 129029.0], [75.2, 129029.0], [75.3, 129030.0], [75.4, 129030.0], [75.5, 129031.0], [75.6, 129032.0], [75.7, 129032.0], [75.8, 129033.0], [75.9, 129034.0], [76.0, 129035.0], [76.1, 129036.0], [76.2, 129037.0], [76.3, 129038.0], [76.4, 129039.0], [76.5, 129041.0], [76.6, 129041.0], [76.7, 129042.0], [76.8, 129044.0], [76.9, 129046.0], [77.0, 129048.0], [77.1, 129051.0], [77.2, 129055.0], [77.3, 129060.0], [77.4, 129064.0], [77.5, 129068.0], [77.6, 129071.0], [77.7, 129077.0], [77.8, 129090.0], [77.9, 129103.0], [78.0, 129124.0], [78.1, 129164.0], [78.2, 129183.0], [78.3, 129197.0], [78.4, 129212.0], [78.5, 129224.0], [78.6, 129237.0], [78.7, 129241.0], [78.8, 129245.0], [78.9, 129249.0], [79.0, 129255.0], [79.1, 129260.0], [79.2, 129267.0], [79.3, 129272.0], [79.4, 129276.0], [79.5, 129280.0], [79.6, 129286.0], [79.7, 129294.0], [79.8, 129301.0], [79.9, 129308.0], [80.0, 129316.0], [80.1, 129330.0], [80.2, 129350.0], [80.3, 129365.0], [80.4, 129382.0], [80.5, 129395.0], [80.6, 129407.0], [80.7, 129427.0], [80.8, 129444.0], [80.9, 129457.0], [81.0, 129476.0], [81.1, 129493.0], [81.2, 129505.0], [81.3, 129523.0], [81.4, 129538.0], [81.5, 129551.0], [81.6, 129572.0], [81.7, 129589.0], [81.8, 129600.0], [81.9, 129614.0], [82.0, 129635.0], [82.1, 129647.0], [82.2, 129665.0], [82.3, 129680.0], [82.4, 129695.0], [82.5, 129702.0], [82.6, 129706.0], [82.7, 129715.0], [82.8, 129723.0], [82.9, 129734.0], [83.0, 129742.0], [83.1, 129749.0], [83.2, 129760.0], [83.3, 129768.0], [83.4, 129775.0], [83.5, 129790.0], [83.6, 129798.0], [83.7, 129808.0], [83.8, 129818.0], [83.9, 129830.0], [84.0, 129841.0], [84.1, 129853.0], [84.2, 129860.0], [84.3, 129870.0], [84.4, 129878.0], [84.5, 129889.0], [84.6, 129901.0], [84.7, 129914.0], [84.8, 129929.0], [84.9, 129943.0], [85.0, 129955.0], [85.1, 129973.0], [85.2, 129989.0], [85.3, 130000.0], [85.4, 130009.0], [85.5, 130016.0], [85.6, 130025.0], [85.7, 130042.0], [85.8, 130051.0], [85.9, 130055.0], [86.0, 130059.0], [86.1, 130069.0], [86.2, 130082.0], [86.3, 130092.0], [86.4, 130095.0], [86.5, 130100.0], [86.6, 130107.0], [86.7, 130117.0], [86.8, 130130.0], [86.9, 130138.0], [87.0, 130145.0], [87.1, 130149.0], [87.2, 130155.0], [87.3, 130158.0], [87.4, 130169.0], [87.5, 130179.0], [87.6, 130187.0], [87.7, 130193.0], [87.8, 130200.0], [87.9, 130216.0], [88.0, 130228.0], [88.1, 130239.0], [88.2, 130249.0], [88.3, 130264.0], [88.4, 130274.0], [88.5, 130286.0], [88.6, 130299.0], [88.7, 130317.0], [88.8, 130332.0], [88.9, 130351.0], [89.0, 130374.0], [89.1, 130386.0], [89.2, 130399.0], [89.3, 130412.0], [89.4, 130426.0], [89.5, 130449.0], [89.6, 130475.0], [89.7, 130506.0], [89.8, 130524.0], [89.9, 130555.0], [90.0, 130574.0], [90.1, 130597.0], [90.2, 130620.0], [90.3, 130639.0], [90.4, 130652.0], [90.5, 130674.0], [90.6, 130695.0], [90.7, 130714.0], [90.8, 130733.0], [90.9, 130750.0], [91.0, 130765.0], [91.1, 130776.0], [91.2, 130799.0], [91.3, 130823.0], [91.4, 130841.0], [91.5, 130868.0], [91.6, 130883.0], [91.7, 130899.0], [91.8, 130911.0], [91.9, 130921.0], [92.0, 130925.0], [92.1, 130928.0], [92.2, 130936.0], [92.3, 130944.0], [92.4, 130951.0], [92.5, 130961.0], [92.6, 130967.0], [92.7, 130978.0], [92.8, 130987.0], [92.9, 130996.0], [93.0, 131008.0], [93.1, 131013.0], [93.2, 131018.0], [93.3, 131025.0], [93.4, 131032.0], [93.5, 131036.0], [93.6, 131039.0], [93.7, 131044.0], [93.8, 131047.0], [93.9, 131051.0], [94.0, 131052.0], [94.1, 131053.0], [94.2, 131055.0], [94.3, 131056.0], [94.4, 131057.0], [94.5, 131059.0], [94.6, 131060.0], [94.7, 131061.0], [94.8, 131062.0], [94.9, 131063.0], [95.0, 131063.0], [95.1, 131064.0], [95.2, 131065.0], [95.3, 131065.0], [95.4, 131066.0], [95.5, 131066.0], [95.6, 131067.0], [95.7, 131067.0], [95.8, 131068.0], [95.9, 131068.0], [96.0, 131068.0], [96.1, 131068.0], [96.2, 131069.0], [96.3, 131069.0], [96.4, 131069.0], [96.5, 131070.0], [96.6, 131070.0], [96.7, 131070.0], [96.8, 131071.0], [96.9, 131071.0], [97.0, 131072.0], [97.1, 131072.0], [97.2, 131072.0], [97.3, 131073.0], [97.4, 131073.0], [97.5, 131074.0], [97.6, 131074.0], [97.7, 131075.0], [97.8, 131076.0], [97.9, 131076.0], [98.0, 131078.0], [98.1, 131079.0], [98.2, 131081.0], [98.3, 131084.0], [98.4, 131087.0], [98.5, 131092.0], [98.6, 131098.0], [98.7, 131105.0], [98.8, 131115.0], [98.9, 131122.0], [99.0, 131141.0], [99.1, 131157.0], [99.2, 131166.0], [99.3, 131174.0], [99.4, 131187.0], [99.5, 131199.0], [99.6, 131202.0], [99.7, 131218.0], [99.8, 131245.0], [99.9, 131309.0], [100.0, 131328.0]], "isOverall": false, "label": "Portal_01_LaunchHomepage", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15461.0, "series": [{"data": [[0.0, 15461.0], [131200.0, 81.0], [600.0, 1.0], [1000.0, 594.0], [1100.0, 120.0], [1200.0, 117.0], [1300.0, 70.0], [1400.0, 6.0], [2000.0, 11.0], [131300.0, 41.0], [3000.0, 155.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 2.0], [6100.0, 6.0], [129100.0, 114.0], [130700.0, 145.0], [129700.0, 291.0], [129900.0, 177.0], [129300.0, 190.0], [129500.0, 161.0], [130500.0, 111.0], [130100.0, 327.0], [128900.0, 145.0], [128700.0, 75.0], [128100.0, 16.0], [128300.0, 75.0], [128500.0, 71.0], [130300.0, 151.0], [130900.0, 307.0], [14300.0, 26.0], [100.0, 439.0], [131100.0, 223.0], [200.0, 87.0], [63400.0, 5.0], [63500.0, 12.0], [65500.0, 14.0], [300.0, 41.0], [400.0, 8.0], [129200.0, 364.0], [130000.0, 300.0], [129600.0, 166.0], [129400.0, 158.0], [131000.0, 1434.0], [129800.0, 245.0], [128800.0, 73.0], [129000.0, 1719.0], [128400.0, 78.0], [128200.0, 71.0], [128600.0, 82.0], [130200.0, 206.0], [130400.0, 117.0], [130600.0, 129.0], [130800.0, 126.0]], "isOverall": false, "label": "Portal_01_LaunchHomepage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 131300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 908.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16036.0, "series": [{"data": [[0.0, 16036.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 908.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8202.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 354.45835572272983, "minX": 1.6712868E12, "maxY": 4000.0, "series": [{"data": [[1.67128686E12, 695.1696003313302], [1.67128716E12, 2087.2794932699867], [1.67128698E12, 3598.705844155844], [1.6712868E12, 354.45835572272983], [1.6712871E12, 3662.8006952491237], [1.67128722E12, 728.5134390075822], [1.67128704E12, 4000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67128722E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.0, "maxY": 131197.0, "series": [{"data": [[2.0, 130958.0], [4.0, 130975.0], [5.0, 70.0], [6.0, 65477.0], [7.0, 65525.5], [8.0, 130942.0], [9.0, 65483.5], [10.0, 43661.666666666664], [11.0, 2.0], [12.0, 87292.66666666667], [13.0, 15.0], [14.0, 87290.66666666667], [15.0, 65537.0], [16.0, 65531.5], [17.0, 65534.0], [18.0, 65534.0], [19.0, 65532.5], [20.0, 43691.0], [21.0, 43687.666666666664], [22.0, 65527.5], [23.0, 8.333333333333334], [24.0, 87374.0], [25.0, 43683.0], [26.0, 65524.5], [27.0, 43674.333333333336], [28.0, 43672.333333333336], [29.0, 43671.0], [30.0, 10.333333333333334], [31.0, 65532.0], [32.0, 32248.5], [33.0, 42967.0], [34.0, 65536.5], [35.0, 43678.666666666664], [36.0, 42987.0], [37.0, 42981.666666666664], [38.0, 32260.0], [39.0, 64508.0], [40.0, 9.5], [41.0, 37151.28571428571], [42.0, 32251.5], [43.0, 32243.5], [44.0, 42961.333333333336], [45.0, 42998.666666666664], [46.0, 32260.75], [47.0, 32755.75], [48.0, 43006.333333333336], [49.0, 21847.166666666664], [50.0, 64514.0], [51.0, 26215.4], [52.0, 32255.5], [53.0, 2.3333333333333335], [54.0, 52013.0], [55.0, 26208.0], [56.0, 43685.0], [57.0, 4.0], [58.0, 43687.0], [59.0, 3.0], [60.0, 43676.16666666667], [61.0, 26200.4], [62.0, 43689.666666666664], [63.0, 3.6666666666666665], [64.0, 21851.166666666664], [65.0, 26218.2], [66.0, 26194.4], [67.0, 26193.8], [68.0, 26194.6], [69.0, 18726.428571428572], [71.0, 131061.0], [70.0, 128980.0], [75.0, 128995.0], [74.0, 128995.0], [73.0, 128995.0], [72.0, 128985.0], [77.0, 64649.5], [79.0, 3816.542857142857], [78.0, 43028.333333333336], [76.0, 128994.0], [80.0, 25796.8], [81.0, 18435.714285714286], [82.0, 21499.666666666664], [83.0, 25819.4], [84.0, 14554.111111111111], [85.0, 26193.4], [86.0, 26190.4], [87.0, 14574.444444444445], [88.0, 43691.666666666664], [89.0, 21849.166666666668], [90.0, 26218.8], [91.0, 21845.833333333336], [92.0, 5.0], [93.0, 25797.0], [94.0, 18730.571428571428], [95.0, 32244.75], [96.0, 13115.0], [97.0, 32244.75], [98.0, 4.75], [99.0, 37143.0], [100.0, 21499.666666666664], [101.0, 8739.2], [103.0, 43675.666666666664], [102.0, 131006.0], [104.0, 10921.75], [105.0, 32755.0], [106.0, 14341.555555555555], [107.0, 14.75], [108.0, 37439.71428571428], [109.0, 18729.285714285714], [110.0, 16385.375], [111.0, 26214.4], [112.0, 26193.6], [113.0, 12902.7], [114.0, 18724.142857142855], [115.0, 21843.666666666668], [116.0, 64482.5], [117.0, 7716.64705882353], [118.0, 32770.5], [119.0, 37150.0], [120.0, 16304.25], [121.0, 14491.888888888889], [122.0, 6.428571428571428], [123.0, 12.666666666666666], [124.0, 4.428571428571429], [125.0, 4.142857142857143], [126.0, 26247.3], [127.0, 32810.166666666664], [128.0, 5.571428571428571], [129.0, 52324.6], [130.0, 32704.5], [131.0, 13128.4], [132.0, 32810.5], [133.0, 16302.875], [134.0, 26094.2], [135.0, 10055.153846153846], [136.0, 14.5], [137.0, 15.333333333333334], [138.0, 3.3333333333333335], [139.0, 2.5], [140.0, 9.307692307692308], [141.0, 5.25], [142.0, 16403.0], [143.0, 16303.75], [144.0, 3.1249999999999996], [145.0, 114495.625], [146.0, 14581.777777777777], [147.0, 3.3333333333333335], [148.0, 43600.16666666667], [149.0, 14496.555555555555], [150.0, 16301.375], [151.0, 21742.333333333332], [152.0, 23861.181818181816], [153.0, 9375.714285714284], [154.0, 16303.25], [155.0, 16386.125], [156.0, 43737.0], [157.0, 9356.285714285714], [158.0, 14556.0], [159.0, 9380.285714285716], [160.0, 10078.76923076923], [161.0, 18745.857142857145], [162.0, 16375.5], [163.0, 18751.14285714286], [164.0, 9360.714285714286], [165.0, 8.250000000000002], [166.0, 18731.214285714283], [167.0, 32743.5], [168.0, 11933.181818181818], [169.0, 14536.0], [170.0, 14549.888888888889], [171.0, 3.375], [172.0, 26199.4], [173.0, 13082.000000000002], [174.0, 13080.400000000001], [175.0, 11891.272727272728], [176.0, 14579.111111111111], [177.0, 11739.272727272728], [178.0, 11891.090909090908], [179.0, 11732.181818181818], [180.0, 13081.1], [181.0, 18.700000000000003], [182.0, 23587.18181818182], [183.0, 11741.727272727272], [184.0, 4.636363636363637], [185.0, 21830.333333333336], [186.0, 11862.454545454546], [187.0, 6899.684210526317], [188.0, 43458.666666666664], [189.0, 8192.5], [190.0, 26079.2], [191.0, 13109.699999999999], [192.0, 3.555555555555556], [193.0, 87138.33333333333], [194.0, 8153.9375], [195.0, 10866.916666666666], [196.0, 65518.5], [197.0, 9368.714285714286], [198.0, 26080.0], [199.0, 5942.5], [200.0, 8153.6875], [201.0, 14583.555555555555], [202.0, 12918.7], [203.0, 14486.888888888889], [204.0, 10094.538461538461], [205.0, 5.636363636363637], [206.0, 13760.684210526317], [207.0, 21845.0], [208.0, 5.0], [209.0, 18698.642857142855], [210.0, 32816.75], [211.0, 7280.555555555556], [212.0, 13048.1], [213.0, 10909.499999999998], [214.0, 10944.75], [215.0, 13123.599999999999], [216.0, 11929.363636363636], [217.0, 13135.599999999999], [218.0, 6586.75], [219.0, 16374.375], [220.0, 51.80952380952381], [221.0, 37380.857142857145], [222.0, 8753.533333333333], [223.0, 4684.607142857143], [224.0, 43721.333333333336], [225.0, 18727.0], [226.0, 9386.642857142857], [227.0, 10937.833333333334], [228.0, 10102.153846153846], [229.0, 10933.583333333334], [230.0, 10924.166666666668], [231.0, 10087.384615384617], [232.0, 10928.250000000002], [233.0, 10084.076923076924], [234.0, 10079.307692307691], [235.0, 11911.727272727272], [236.0, 10921.666666666666], [237.0, 4858.592592592592], [238.0, 14547.222222222223], [239.0, 16365.125], [240.0, 6235.761904761905], [241.0, 21814.333333333332], [242.0, 6235.142857142857], [243.0, 18738.714285714283], [244.0, 7591.411764705882], [245.0, 10752.416666666666], [246.0, 9221.5], [247.0, 6453.2], [248.0, 16127.625], [249.0, 8608.8], [250.0, 11730.727272727272], [251.0, 9222.214285714284], [252.0, 9348.357142857143], [253.0, 8151.0], [254.0, 11744.636363636364], [255.0, 8174.5625], [256.0, 8183.1875], [258.0, 8752.666666666666], [260.0, 10760.333333333334], [262.0, 8205.3125], [264.0, 8750.066666666666], [270.0, 5711.521739130434], [268.0, 11896.363636363636], [266.0, 43725.333333333336], [272.0, 9347.5], [274.0, 8718.466666666667], [276.0, 10024.76923076923], [278.0, 20.933333333333334], [280.0, 6799.157894736842], [286.0, 5.866666666666667], [284.0, 5.2666666666666675], [282.0, 4664.75], [288.0, 7691.764705882353], [290.0, 11.571428571428571], [292.0, 2.4285714285714284], [294.0, 3.6363636363636362], [296.0, 16313.625], [302.0, 8196.625], [300.0, 8715.199999999999], [298.0, 3.0], [304.0, 8690.466666666667], [306.0, 5.1875], [308.0, 7668.764705882353], [310.0, 8459.354838709676], [312.0, 7708.882352941177], [318.0, 9351.642857142857], [316.0, 6886.9473684210525], [314.0, 13117.099999999999], [320.0, 4364.9333333333325], [322.0, 7713.64705882353], [324.0, 7245.555555555556], [326.0, 7169.944444444445], [328.0, 5963.636363636363], [334.0, 8148.9375], [332.0, 9370.714285714286], [330.0, 6908.000000000001], [336.0, 7242.666666666666], [338.0, 8745.666666666666], [340.0, 5618.086956521739], [342.0, 7272.277777777778], [344.0, 6224.428571428572], [350.0, 8740.466666666667], [348.0, 4499.137931034483], [346.0, 5965.772727272728], [352.0, 7283.777777777777], [354.0, 43790.333333333336], [358.0, 43698.666666666664], [356.0, 130278.0], [360.0, 21.0], [366.0, 10087.692307692309], [364.0, 154.70886075949363], [362.0, 93.74358974358974], [368.0, 11825.818181818184], [370.0, 6203.142857142857], [372.0, 7691.882352941177], [374.0, 5703.739130434782], [376.0, 7287.277777777777], [380.0, 10020.692307692309], [382.0, 5042.384615384615], [378.0, 6856.8421052631575], [384.0, 3540.6216216216217], [386.0, 7665.64705882353], [388.0, 4836.555555555555], [390.0, 5700.739130434783], [392.0, 5924.000000000001], [398.0, 6859.473684210526], [396.0, 14477.555555555555], [394.0, 8145.125], [400.0, 7239.444444444444], [402.0, 6516.8], [406.0, 2608.470588235294], [404.0, 130233.0], [408.0, 11846.818181818182], [414.0, 5946.363636363636], [412.0, 5458.083333333333], [410.0, 3316.125], [416.0, 4843.074074074074], [418.0, 6225.761904761905], [420.0, 10057.307692307691], [422.0, 9320.035714285714], [424.0, 5460.416666666667], [430.0, 5969.681818181819], [428.0, 5688.608695652174], [426.0, 9335.357142857143], [432.0, 10064.076923076922], [434.0, 5868.909090909092], [436.0, 5618.782608695652], [438.0, 4782.074074074075], [440.0, 6234.952380952381], [446.0, 5.470588235294118], [444.0, 2964.272727272727], [442.0, 6858.526315789473], [448.0, 5450.125], [450.0, 5034.999999999999], [452.0, 7694.235294117647], [454.0, 4684.678571428572], [456.0, 4672.642857142857], [462.0, 5429.583333333333], [460.0, 5665.608695652174], [458.0, 4846.296296296296], [476.0, 10059.384615384615], [464.0, 5672.304347826087], [466.0, 130238.0], [478.0, 5234.0], [468.0, 4985.346153846154], [470.0, 10396.68], [472.0, 5449.75], [474.0, 5030.961538461538], [480.0, 5465.625], [482.0, 4844.481481481481], [484.0, 4523.344827586207], [486.0, 10060.461538461539], [488.0, 4499.3], [494.0, 2851.369565217391], [492.0, 13074.333333333334], [490.0, 5250.4400000000005], [496.0, 26181.0], [498.0, 4516.9655172413795], [500.0, 6204.190476190476], [502.0, 9042.793103448275], [504.0, 5011.461538461538], [506.0, 130621.0], [510.0, 4838.555555555556], [508.0, 2216.6000000000004], [512.0, 6231.095238095238], [524.0, 4220.8387096774195], [516.0, 18614.14285714286], [528.0, 3750.0], [540.0, 4038.5625], [536.0, 5151.08], [532.0, 9334.428571428572], [520.0, 985.4460431654677], [544.0, 4029.21875], [556.0, 5151.4800000000005], [548.0, 3414.7894736842104], [560.0, 6.909090909090909], [572.0, 3.111111111111111], [568.0, 4304.1], [564.0, 7.906249999999997], [552.0, 4600.964285714285], [576.0, 5472.583333333333], [588.0, 7.620689655172413], [580.0, 6244.9047619047615], [592.0, 5872.090909090909], [604.0, 3320.5128205128203], [600.0, 8066.9375], [596.0, 3588.777777777778], [584.0, 3865.029411764706], [608.0, 4046.5], [620.0, 7484.200000000001], [612.0, 3736.657142857143], [624.0, 3062.7441860465115], [636.0, 8754.4], [632.0, 5508.083333333334], [628.0, 10096.076923076924], [616.0, 4837.814814814815], [640.0, 2243.733333333333], [652.0, 2132.671232876712], [644.0, 3485.7297297297296], [656.0, 18538.785714285714], [668.0, 3751.2571428571428], [664.0, 5963.227272727272], [660.0, 7141.945945945946], [648.0, 6.702702702702702], [676.0, 9928.076923076924], [684.0, 249.5492957746478], [672.0, 131067.0], [696.0, 8740.066666666668], [700.0, 2626.7000000000003], [688.0, 3492.972972972973], [692.0, 2793.0212765957444], [680.0, 3913.3939393939395], [704.0, 3930.5833333333335], [716.0, 8193.375], [708.0, 3460.9210526315787], [720.0, 2852.782608695652], [732.0, 2522.5384615384614], [728.0, 3375.5384615384614], [724.0, 5963.272727272727], [712.0, 2680.8367346938776], [740.0, 32807.5], [760.0, 4525.172413793103], [764.0, 3858.7352941176473], [756.0, 64515.0], [744.0, 46.11538461538461], [752.0, 129028.0], [748.0, 131063.0], [736.0, 129039.0], [768.0, 893.4999999999998], [780.0, 3860.8529411764707], [772.0, 2538.1451612903224], [784.0, 3648.5555555555557], [796.0, 128982.0], [792.0, 4185.806451612903], [788.0, 2188.1129032258063], [776.0, 22078.083333333336], [800.0, 129009.5], [812.0, 1832.337837837838], [804.0, 6977.675675675676], [816.0, 129018.0], [820.0, 128999.0], [828.0, 129018.0], [824.0, 129032.0], [808.0, 6161.190476190476], [832.0, 2.8695652173913047], [860.0, 8084.800000000001], [844.0, 892.5384615384617], [852.0, 3946.264705882353], [848.0, 131079.0], [856.0, 131075.0], [868.0, 22182.5], [872.0, 3900.235294117647], [876.0, 131067.0], [880.0, 33557.0], [888.0, 3043.5312499999995], [884.0, 1314.8378378378382], [896.0, 94546.99999999999], [900.0, 131069.0], [904.0, 131066.0], [908.0, 16768.125], [920.0, 131077.0], [916.0, 131080.0], [952.0, 131076.0], [928.0, 18726.285714285714], [956.0, 131072.0], [932.0, 131074.0], [948.0, 131071.0], [944.0, 131069.5], [940.0, 131076.0], [936.0, 129023.0], [988.0, 129027.0], [984.0, 129029.0], [980.0, 131069.0], [976.0, 131064.0], [960.0, 131072.5], [964.0, 131070.0], [972.0, 131064.0], [968.0, 131064.0], [1016.0, 129031.0], [1020.0, 129007.0], [996.0, 131069.0], [992.0, 131074.0], [1012.0, 131055.0], [1008.0, 131067.0], [1004.0, 131074.0], [1080.0, 131075.0], [1032.0, 129015.0], [1064.0, 129023.0], [1048.0, 131072.0], [1040.0, 129023.0], [1136.0, 129013.0], [1144.0, 131066.0], [1096.0, 131057.0], [1088.0, 131063.0], [1128.0, 129026.0], [1120.0, 129018.0], [1112.0, 129013.0], [1184.0, 131069.0], [1176.0, 129036.0], [1168.0, 129053.0], [1160.0, 131075.0], [1272.0, 131057.0], [1256.0, 129025.5], [1248.0, 129024.5], [1240.0, 129011.5], [1336.0, 129031.0], [1328.0, 129030.0], [1320.0, 131093.0], [1280.0, 131075.0], [1288.0, 129013.0], [1304.0, 131055.0], [1296.0, 129018.0], [1400.0, 131073.0], [1384.0, 129033.0], [1344.0, 129033.0], [1352.0, 131069.0], [1464.0, 131063.5], [1456.0, 131066.0], [1448.0, 131070.0], [1440.0, 129022.0], [1408.0, 129035.0], [1416.0, 130059.0], [1432.0, 129026.0], [1424.0, 129026.0], [1520.0, 131056.0], [1528.0, 131049.5], [1480.0, 131066.0], [1472.0, 131061.0], [1512.0, 131062.0], [1504.0, 131075.0], [1496.0, 129021.0], [1488.0, 129029.0], [1592.0, 130041.0], [1584.0, 131078.0], [1568.0, 131067.0], [1536.0, 131076.0], [1544.0, 131074.0], [1560.0, 131075.0], [1552.0, 131071.0], [1656.0, 129027.0], [1648.0, 131073.0], [1608.0, 131080.0], [1640.0, 129023.0], [1624.0, 129026.0], [1616.0, 129020.0], [1720.0, 129021.0], [1712.0, 129022.0], [1704.0, 131065.0], [1696.0, 129021.0], [1688.0, 131065.0], [1664.0, 129016.0], [1672.0, 129028.0], [1680.0, 131068.0], [1776.0, 131068.0], [1784.0, 131071.0], [1736.0, 131076.0], [1728.0, 131062.0], [1768.0, 129025.0], [1760.0, 129012.0], [1752.0, 131073.0], [1744.0, 131081.0], [1848.0, 131055.0], [1840.0, 131073.0], [1832.0, 129012.0], [1824.0, 131071.0], [1792.0, 129027.0], [1800.0, 129026.0], [1808.0, 131056.0], [1912.0, 131071.0], [1904.0, 131079.0], [1896.0, 129015.0], [1856.0, 131051.0], [1880.0, 131073.0], [1872.0, 129028.0], [1976.0, 131055.5], [1968.0, 131066.0], [1960.0, 131069.5], [1952.0, 129023.0], [1920.0, 130048.5], [1944.0, 129028.0], [1936.0, 131070.0], [2032.0, 131053.5], [2040.0, 131072.0], [1992.0, 131074.0], [1984.0, 131086.0], [2024.0, 131070.0], [2016.0, 131069.0], [2008.0, 131069.0], [2000.0, 131068.0], [2144.0, 130047.0], [2064.0, 131065.5], [2128.0, 129030.0], [2096.0, 131065.5], [2080.0, 129011.0], [2288.0, 129026.0], [2256.0, 129005.0], [2240.0, 129022.0], [2224.0, 131076.0], [2208.0, 129014.0], [2400.0, 129020.0], [2416.0, 131080.0], [2368.0, 129021.0], [2304.0, 129026.0], [2352.0, 129017.0], [2336.0, 131085.0], [2544.0, 129023.0], [2512.0, 131072.0], [2432.0, 131069.0], [2624.0, 129779.0], [2608.0, 129384.0], [2592.0, 129022.0], [2576.0, 129480.0], [2928.0, 128301.0], [2912.0, 129712.0], [2864.0, 130621.0], [2848.0, 128594.0], [2832.0, 130107.0], [2816.0, 129212.0], [3056.0, 131060.0], [3040.0, 131091.0], [2960.0, 130786.0], [3136.0, 129028.0], [3184.0, 131078.0], [3152.0, 129036.0], [3168.0, 129035.0], [3088.0, 129308.0], [3072.0, 129043.0], [3120.0, 130040.0], [3312.0, 129668.0], [3264.0, 130300.0], [3280.0, 130783.0], [3296.0, 130491.5], [3248.0, 129029.0], [3232.0, 131073.0], [3424.0, 129912.0], [3408.0, 129039.0], [3328.0, 129070.0], [3344.0, 128878.0], [3376.0, 131100.0], [3360.0, 129599.0], [3392.0, 130951.0], [3440.0, 128203.0], [3456.0, 129807.5], [3488.0, 130936.52631578947], [3520.0, 129037.0], [3536.0, 129072.0], [3552.0, 129040.0], [3632.0, 130177.04878048778], [3680.0, 129005.5], [3584.0, 131032.0], [3728.0, 131068.0], [3744.0, 130535.5], [3936.0, 129595.77777777778], [3952.0, 129760.0], [3904.0, 130993.0], [3920.0, 131011.5], [3840.0, 129084.0], [3856.0, 130020.0], [3888.0, 129042.0], [3872.0, 129029.0], [3984.0, 130093.0], [4000.0, 126221.41891252952], [3968.0, 129319.5], [2113.0, 129013.0], [2065.0, 131070.0], [2049.0, 129025.5], [2129.0, 129014.0], [2097.0, 129042.0], [2081.0, 129025.0], [2289.0, 129027.0], [2193.0, 129024.0], [2257.0, 129011.0], [2241.0, 129034.0], [2225.0, 129021.0], [2209.0, 129014.0], [2417.0, 129028.0], [2401.0, 129028.0], [2385.0, 129020.0], [2305.0, 129027.0], [2321.0, 129041.0], [2353.0, 129017.0], [2337.0, 131080.0], [2545.0, 129019.0], [2513.0, 129020.0], [2433.0, 129017.0], [2641.0, 131061.0], [2625.0, 131063.0], [2609.0, 129026.0], [2593.0, 129023.0], [2577.0, 129960.0], [2705.0, 129185.59259259261], [2929.0, 129300.0], [2913.0, 131095.0], [2881.0, 131061.0], [2817.0, 129311.0], [2833.0, 130157.0], [2865.0, 130589.0], [2849.0, 128648.0], [3057.0, 131066.0], [3025.0, 131122.0], [3041.0, 131075.0], [2945.0, 129610.0], [3137.0, 131097.0], [3185.0, 129245.0], [3153.0, 129043.0], [3169.0, 130003.0], [3089.0, 128358.0], [3073.0, 129041.0], [3105.0, 129695.0], [3313.0, 130500.0], [3265.0, 130500.0], [3281.0, 129792.0], [3297.0, 129303.0], [3249.0, 129034.0], [3425.0, 129861.0], [3393.0, 129048.0], [3409.0, 129042.0], [3441.0, 131074.0], [3345.0, 129828.0], [3329.0, 129066.0], [3377.0, 130034.0], [3361.0, 129454.0], [3457.0, 130648.0], [3569.0, 129562.08333333331], [3505.0, 131117.0], [3489.0, 131184.0], [3537.0, 129045.0], [3553.0, 129564.5], [3697.0, 130037.0], [3585.0, 131031.0], [3729.0, 131068.0], [3713.0, 131059.0], [3761.0, 131020.5], [3745.0, 131066.0], [3905.0, 130992.0], [3953.0, 129251.16666666666], [3921.0, 130386.0], [3937.0, 129258.0], [3841.0, 129084.0], [3857.0, 129041.0], [3889.0, 131036.0], [3985.0, 130090.66666666667], [3969.0, 129313.0], [1073.0, 129024.0], [1081.0, 129023.0], [1025.0, 129016.0], [1033.0, 129007.0], [1049.0, 131060.0], [1041.0, 129018.0], [1137.0, 129013.5], [1145.0, 129026.0], [1089.0, 129023.0], [1113.0, 129038.0], [1105.0, 131053.0], [1185.0, 131069.0], [1177.0, 129024.0], [1169.0, 129042.0], [1161.0, 129023.0], [1153.0, 131066.0], [1265.0, 130042.5], [1273.0, 131058.0], [1257.0, 131072.0], [1241.0, 129015.5], [1225.0, 129185.07692307694], [1329.0, 129041.0], [1337.0, 129037.0], [1289.0, 129021.0], [1281.0, 131071.0], [1321.0, 131095.0], [1313.0, 129033.0], [1305.0, 129019.0], [1297.0, 129023.0], [1401.0, 131073.0], [1393.0, 131076.5], [1385.0, 129029.0], [1377.0, 129597.93333333333], [1353.0, 131072.0], [1417.0, 131081.0], [1457.0, 131064.0], [1409.0, 131082.0], [1449.0, 131069.0], [1441.0, 131065.0], [1433.0, 131074.0], [1425.0, 129029.0], [1529.0, 131085.0], [1521.0, 131071.0], [1513.0, 129021.0], [1505.0, 129014.0], [1473.0, 129021.0], [1481.0, 131073.0], [1497.0, 129027.0], [1585.0, 129207.72727272726], [1593.0, 129015.0], [1545.0, 129028.0], [1537.0, 129020.0], [1577.0, 129020.0], [1569.0, 131067.0], [1561.0, 131069.0], [1553.0, 129025.0], [1609.0, 131082.0], [1649.0, 131069.0], [1601.0, 131083.0], [1641.0, 129026.0], [1633.0, 130052.0], [1625.0, 131069.0], [1617.0, 129022.0], [1721.0, 129022.0], [1713.0, 129021.0], [1705.0, 129025.0], [1697.0, 129023.0], [1689.0, 129024.0], [1681.0, 131075.0], [1777.0, 131055.0], [1785.0, 129025.0], [1737.0, 129036.0], [1729.0, 131061.66666666667], [1769.0, 131068.0], [1761.0, 129022.0], [1753.0, 129020.0], [1745.0, 129027.0], [1849.0, 131067.0], [1841.0, 129013.0], [1833.0, 129029.0], [1825.0, 131057.0], [1793.0, 131062.0], [1801.0, 130048.0], [1817.0, 129037.0], [1809.0, 131054.5], [1865.0, 130049.5], [1913.0, 129025.0], [1857.0, 131048.5], [1897.0, 129025.0], [1889.0, 130044.0], [1881.0, 129024.0], [1873.0, 131075.0], [1977.0, 131056.0], [1929.0, 131068.0], [1921.0, 129017.0], [2041.0, 131045.0], [2033.0, 131074.0], [2025.0, 131071.0], [2017.0, 131068.0], [1985.0, 131090.0], [1993.0, 131079.0], [2009.0, 129025.0], [2001.0, 129030.0], [2146.0, 130044.0], [2066.0, 131069.0], [2130.0, 131072.0], [2114.0, 129013.0], [2098.0, 129030.0], [2082.0, 129009.0], [2274.0, 129034.99999999999], [2290.0, 129031.0], [2194.0, 129696.18518518518], [2178.0, 129024.0], [2258.0, 129008.0], [2242.0, 129017.0], [2226.0, 131072.0], [2210.0, 129015.0], [2402.0, 131076.0], [2418.0, 129027.0], [2370.0, 130041.0], [2354.0, 129017.0], [2306.0, 129024.0], [2338.0, 131081.0], [2546.0, 129023.0], [2514.0, 131068.0], [2434.0, 131068.0], [2626.0, 130179.0], [2610.0, 129020.0], [2594.0, 129023.0], [2802.0, 129677.48571428572], [2930.0, 128348.0], [2914.0, 128710.0], [2866.0, 130489.0], [2850.0, 129648.0], [2834.0, 130206.0], [2818.0, 129361.0], [3026.0, 128295.0], [3058.0, 131064.0], [3042.0, 131072.0], [2962.0, 131132.0], [2946.0, 129025.0], [3138.0, 129051.0], [3154.0, 129044.0], [3170.0, 128953.0], [3090.0, 129406.0], [3074.0, 129041.0], [3314.0, 130799.0], [3266.0, 129245.0], [3282.0, 130188.0], [3298.0, 130358.0], [3250.0, 129035.0], [3234.0, 128946.67741935486], [3394.0, 129029.0], [3410.0, 129038.0], [3426.0, 129812.0], [3346.0, 129125.0], [3330.0, 129060.0], [3378.0, 131103.0], [3362.0, 129954.0], [3506.0, 131141.5], [3490.0, 131145.0], [3570.0, 129026.0], [3554.0, 129055.0], [3458.0, 129297.0], [3538.0, 129072.0], [3682.0, 129005.0], [3586.0, 131039.0], [3714.0, 130173.60975609756], [3730.0, 131068.0], [3746.0, 131063.0], [3842.0, 129062.0], [3954.0, 129241.0], [3874.0, 129475.66666666667], [3890.0, 130038.0], [3858.0, 129698.33333333333], [3906.0, 131000.5], [3922.0, 130417.42857142858], [3938.0, 129270.0], [3986.0, 130091.25000000001], [3970.0, 129307.25], [2115.0, 129012.0], [2131.0, 129014.0], [2051.0, 129026.0], [2099.0, 131092.0], [2083.0, 129027.0], [2067.0, 131064.5], [2195.0, 131059.0], [2291.0, 129027.0], [2179.0, 129031.0], [2259.0, 129014.0], [2243.0, 129032.0], [2227.0, 129020.0], [2211.0, 129012.0], [2403.0, 129019.0], [2307.0, 131058.0], [2387.0, 129018.0], [2355.0, 129017.0], [2339.0, 131081.0], [2547.0, 129020.0], [2531.0, 129035.0], [2515.0, 131066.0], [2435.0, 129022.0], [2611.0, 129021.0], [2595.0, 129023.0], [2579.0, 130086.0], [2563.0, 130381.0], [2803.0, 130082.0], [2707.0, 129332.0], [2915.0, 131093.0], [2931.0, 131084.0], [2883.0, 131068.0], [2835.0, 129702.0], [2867.0, 129944.0], [2851.0, 128196.0], [3059.0, 131057.0], [3027.0, 130057.0], [3043.0, 131074.0], [2963.0, 130088.0], [2947.0, 130690.0], [3139.0, 129041.0], [3155.0, 129040.0], [3187.0, 130380.0], [3091.0, 129357.0], [3075.0, 129041.0], [3107.0, 129470.0], [3267.0, 130949.0], [3315.0, 131116.0], [3299.0, 129194.0], [3251.0, 129031.0], [3235.0, 129025.0], [3283.0, 131067.0], [3443.0, 129790.0], [3427.0, 130303.25149700603], [3395.0, 129038.0], [3411.0, 129038.0], [3331.0, 129055.0], [3347.0, 130118.0], [3379.0, 129135.0], [3363.0, 130852.0], [3555.0, 129042.0], [3523.0, 129080.0], [3571.0, 128950.5], [3459.0, 129015.0], [3491.0, 131135.0], [3539.0, 129058.0], [3699.0, 130037.5], [3763.0, 131021.0], [3731.0, 131068.0], [3715.0, 131067.0], [3939.0, 129274.33333333333], [3907.0, 130990.0], [3923.0, 130168.14285714287], [3955.0, 129251.0], [3859.0, 130048.5], [3843.0, 129039.0], [3891.0, 128999.0], [3875.0, 129037.5], [3987.0, 130098.875], [3971.0, 129301.75], [513.0, 6556.85], [541.0, 3486.05], [525.0, 4346.6], [537.0, 4775.666666666666], [517.0, 130616.0], [529.0, 32555.0], [533.0, 5855.590909090909], [521.0, 9344.75], [545.0, 4154.967741935484], [557.0, 4164.096774193548], [549.0, 4779.333333333333], [573.0, 8673.0], [569.0, 4614.214285714286], [561.0, 8065.59375], [565.0, 7825.39393939394], [553.0, 4440.448275862069], [577.0, 6251.619047619048], [589.0, 9.133333333333336], [581.0, 4230.677419354839], [605.0, 3698.3714285714286], [601.0, 4166.8387096774195], [593.0, 3459.157894736842], [597.0, 5170.04], [585.0, 3974.6060606060605], [609.0, 16153.0], [621.0, 4684.678571428571], [613.0, 2330.0877192982457], [637.0, 8956.433333333334], [633.0, 43690.0], [625.0, 6919.421052631579], [629.0, 2571.9615384615386], [617.0, 4848.703703703704], [641.0, 2900.3478260869565], [653.0, 12.89655172413793], [645.0, 3674.8], [669.0, 4379.7], [665.0, 2388.7818181818184], [657.0, 8.23529411764706], [661.0, 2314.734375], [649.0, 8744.633333333333], [673.0, 8.117647058823529], [685.0, 5710.478260869565], [677.0, 3491.5945945945946], [697.0, 3.6944444444444446], [701.0, 3454.157894736842], [689.0, 3861.8823529411766], [693.0, 4164.225806451613], [681.0, 2810.608695652174], [705.0, 2567.9454545454546], [717.0, 3454.710526315789], [709.0, 3753.285714285714], [733.0, 21845.333333333336], [729.0, 3650.361111111111], [721.0, 3055.8837209302324], [725.0, 2269.706896551724], [713.0, 4100.03125], [741.0, 26253.0], [737.0, 3614.6666666666665], [761.0, 3279.05], [765.0, 2527.0192307692305], [753.0, 129029.0], [757.0, 65517.5], [745.0, 1837.5972222222222], [749.0, 131082.0], [769.0, 2257.5135135135124], [781.0, 2575.9607843137255], [773.0, 1989.5274725274721], [793.0, 3870.297297297297], [785.0, 2480.811320754717], [789.0, 2057.126984126984], [777.0, 43672.333333333336], [805.0, 7.698113207547171], [813.0, 6499.700000000001], [825.0, 129032.0], [829.0, 4462.206896551725], [817.0, 129002.0], [821.0, 128962.0], [809.0, 25802.8], [833.0, 16126.4375], [861.0, 131071.0], [841.0, 129019.5], [845.0, 86710.33333333333], [853.0, 7061.85], [849.0, 129013.0], [857.0, 131072.0], [837.0, 129028.5], [865.0, 8140.764705882352], [869.0, 15353.111111111111], [877.0, 131068.0], [873.0, 131071.0], [889.0, 3060.8333333333335], [881.0, 26875.2], [901.0, 33528.0], [925.0, 131077.0], [897.0, 22858.166666666668], [905.0, 131064.0], [909.0, 6175.84], [921.0, 131076.0], [917.0, 131079.0], [953.0, 131073.0], [929.0, 941.1999999999998], [957.0, 131072.0], [933.0, 131078.0], [945.0, 131069.0], [941.0, 131071.0], [937.0, 129021.0], [989.0, 129029.0], [985.0, 129030.0], [981.0, 129033.0], [977.0, 131065.5], [973.0, 131071.0], [969.0, 131071.0], [1021.0, 129006.0], [1017.0, 129030.0], [1013.0, 131055.0], [1009.0, 131066.0], [993.0, 131072.0], [997.0, 129028.0], [1005.0, 131050.0], [1001.0, 130047.0], [1074.0, 129028.55555555556], [1082.0, 131074.0], [1058.0, 129023.0], [1034.0, 129017.0], [1050.0, 131059.0], [1042.0, 129021.0], [1098.0, 131070.0], [1146.0, 131071.0], [1122.0, 129020.0], [1114.0, 129019.0], [1090.0, 129020.0], [1186.0, 131068.0], [1178.0, 129026.0], [1170.0, 129041.0], [1162.0, 129070.0], [1154.0, 131072.0], [1226.0, 129022.0], [1258.0, 129024.0], [1250.0, 129023.5], [1242.0, 129020.0], [1234.0, 129021.0], [1338.0, 129032.0], [1330.0, 129031.0], [1314.0, 129037.0], [1282.0, 131062.0], [1290.0, 129019.0], [1306.0, 131057.0], [1298.0, 129021.0], [1394.0, 131064.0], [1386.0, 129026.0], [1378.0, 130064.0], [1354.0, 131066.0], [1346.0, 129031.5], [1466.0, 129026.5], [1458.0, 131064.0], [1450.0, 131067.0], [1442.0, 129023.0], [1410.0, 129032.0], [1418.0, 129031.0], [1434.0, 129014.0], [1426.0, 131075.0], [1530.0, 129016.0], [1522.0, 131056.0], [1514.0, 131062.0], [1506.0, 131075.0], [1474.0, 131070.0], [1482.0, 131058.0], [1498.0, 129026.0], [1490.0, 129017.0], [1594.0, 129023.0], [1586.0, 129024.0], [1578.0, 131066.0], [1570.0, 131066.0], [1538.0, 131079.0], [1546.0, 129027.0], [1562.0, 131073.0], [1554.0, 129005.0], [1650.0, 131058.0], [1658.0, 130048.5], [1610.0, 129033.0], [1602.0, 129039.0], [1642.0, 129024.0], [1634.0, 131072.0], [1626.0, 131062.0], [1618.0, 129031.0], [1722.0, 129024.0], [1714.0, 129018.0], [1706.0, 131068.0], [1698.0, 131079.0], [1666.0, 130039.0], [1674.0, 130045.0], [1690.0, 131078.0], [1682.0, 131071.0], [1778.0, 131067.0], [1786.0, 131065.0], [1738.0, 131086.0], [1770.0, 129025.0], [1762.0, 129023.0], [1754.0, 129023.0], [1746.0, 131080.0], [1850.0, 131051.0], [1842.0, 131069.0], [1834.0, 129020.0], [1826.0, 131068.0], [1802.0, 129022.0], [1818.0, 129031.0], [1914.0, 129023.0], [1906.0, 131075.0], [1898.0, 129027.0], [1890.0, 131069.0], [1858.0, 129038.0], [1866.0, 129017.0], [1882.0, 131070.0], [1874.0, 131072.0], [1978.0, 131052.0], [1970.0, 131061.5], [1962.0, 131069.5], [1954.0, 129022.5], [1922.0, 131068.0], [1930.0, 131069.0], [1946.0, 129025.0], [1938.0, 129025.0], [2034.0, 131044.0], [2042.0, 131071.0], [1994.0, 131078.0], [1986.0, 129028.0], [2026.0, 131071.0], [2018.0, 131070.0], [2010.0, 131067.0], [2002.0, 129019.0], [2148.0, 131052.5], [2132.0, 129028.0], [2100.0, 129044.0], [2084.0, 129013.0], [2068.0, 131059.0], [2244.0, 129032.0], [2292.0, 129020.0], [2260.0, 129025.0], [2228.0, 131072.0], [2212.0, 129019.0], [2196.0, 129028.0], [2180.0, 129030.0], [2404.0, 129018.0], [2420.0, 129022.5], [2372.0, 130046.5], [2356.0, 129017.0], [2308.0, 129023.66666666667], [2340.0, 129033.0], [2548.0, 129021.0], [2516.0, 131067.0], [2484.0, 129775.39473684212], [2436.0, 131066.0], [2628.0, 130589.5], [2612.0, 129023.0], [2596.0, 129018.0], [2564.0, 131081.0], [2804.0, 131037.0], [2692.0, 129046.0], [2932.0, 131087.0], [2916.0, 131087.0], [2884.0, 131066.0], [2852.0, 128244.0], [2836.0, 128703.0], [2820.0, 128360.0], [3028.0, 129304.67924528306], [3060.0, 131011.0], [3044.0, 131071.0], [2964.0, 131075.0], [2948.0, 129024.0], [3188.0, 129641.0], [3172.0, 129211.5], [3140.0, 129045.0], [3156.0, 131091.0], [3092.0, 128449.0], [3076.0, 129042.0], [3124.0, 128809.0], [3316.0, 131114.0], [3268.0, 129193.0], [3284.0, 131068.0], [3252.0, 129029.0], [3428.0, 130000.38461538461], [3412.0, 130507.33333333333], [3332.0, 129059.5], [3348.0, 129039.0], [3380.0, 131092.0], [3364.0, 130150.0], [3396.0, 129033.0], [3444.0, 131074.0], [3492.0, 131136.0], [3540.0, 129061.0], [3572.0, 128888.25], [3556.0, 129035.0], [3700.0, 131068.0], [3684.0, 129012.0], [3796.0, 130191.9], [3732.0, 131069.0], [3748.0, 131012.0], [3956.0, 129245.0], [3924.0, 129995.0], [3940.0, 129247.14285714286], [3844.0, 129038.0], [3892.0, 129746.0], [3876.0, 129037.0], [3988.0, 130072.2], [3972.0, 129636.54545454546], [2133.0, 129011.0], [2117.0, 130042.0], [2101.0, 131089.0], [2085.0, 129021.5], [2069.0, 129008.0], [2053.0, 130050.5], [2197.0, 129014.0], [2293.0, 129017.0], [2181.0, 129031.0], [2261.0, 129012.0], [2245.0, 129020.0], [2229.0, 129018.0], [2213.0, 129025.0], [2405.0, 129017.0], [2309.0, 131069.0], [2389.0, 129016.5], [2373.0, 129027.0], [2357.0, 129017.5], [2341.0, 129034.0], [2549.0, 129020.0], [2517.0, 131065.0], [2437.0, 129020.0], [2629.0, 131050.0], [2613.0, 129281.0], [2597.0, 129020.0], [2581.0, 129389.0], [2565.0, 131067.0], [2709.0, 129857.5], [2693.0, 130158.0], [2933.0, 131071.0], [2917.0, 129111.0], [2885.0, 131069.0], [2821.0, 131069.0], [2837.0, 128751.0], [2869.0, 129424.0], [2853.0, 129397.0], [3061.0, 131107.0], [3045.0, 131073.0], [3029.0, 130293.0], [2965.0, 131083.0], [2949.0, 130586.0], [3141.0, 129046.0], [3173.0, 129350.0], [3157.0, 128892.5], [3093.0, 129899.0], [3077.0, 129035.0], [3125.0, 129740.0], [3109.0, 129920.0], [3317.0, 131120.0], [3269.0, 130850.0], [3285.0, 131060.0], [3253.0, 129027.0], [3237.0, 129034.5], [3429.0, 130250.025], [3445.0, 128853.0], [3397.0, 129034.0], [3413.0, 129029.0], [3349.0, 129040.0], [3333.0, 129060.0], [3381.0, 131082.0], [3365.0, 131071.0], [3509.0, 129966.21875], [3461.0, 130159.66666666667], [3493.0, 131168.0], [3525.0, 129079.0], [3541.0, 129067.0], [3573.0, 129566.5], [3557.0, 129031.0], [3701.0, 131067.0], [3733.0, 131069.0], [3829.0, 129277.22368421049], [3717.0, 131068.5], [3765.0, 131024.0], [3749.0, 131013.0], [3941.0, 129365.8], [3957.0, 129316.5], [3909.0, 130996.5], [3925.0, 130199.5], [3845.0, 129037.0], [3861.0, 129691.66666666667], [3893.0, 130018.5], [3877.0, 129025.0], [3989.0, 130057.0], [3973.0, 130299.0], [1083.0, 129023.0], [1075.0, 129026.0], [1067.0, 129023.0], [1059.0, 129023.0], [1027.0, 129010.5], [1035.0, 129007.0], [1051.0, 131059.0], [1043.0, 129023.0], [1147.0, 131074.0], [1139.0, 130047.5], [1131.0, 129025.5], [1123.0, 129028.0], [1091.0, 131066.0], [1099.0, 131059.0], [1115.0, 129018.0], [1107.0, 131057.5], [1187.0, 131068.0], [1179.0, 129023.0], [1171.0, 129042.0], [1163.0, 129074.0], [1155.0, 131067.0], [1267.0, 130047.0], [1275.0, 131061.0], [1259.0, 129021.0], [1243.0, 129008.0], [1227.0, 129030.0], [1235.0, 131069.0], [1331.0, 129040.0], [1339.0, 129037.0], [1291.0, 129020.0], [1283.0, 131067.5], [1323.0, 131081.0], [1315.0, 131100.0], [1307.0, 129017.0], [1299.0, 129023.0], [1403.0, 131084.0], [1395.0, 131070.0], [1387.0, 129030.0], [1355.0, 131064.0], [1347.0, 131079.0], [1419.0, 129034.0], [1467.0, 131069.0], [1411.0, 131069.0], [1451.0, 131061.0], [1443.0, 131063.0], [1435.0, 131073.0], [1427.0, 129027.0], [1483.0, 131056.0], [1523.0, 131068.0], [1475.0, 129019.0], [1515.0, 129026.0], [1507.0, 129012.0], [1499.0, 131077.0], [1491.0, 131055.0], [1595.0, 131068.0], [1579.0, 129025.0], [1563.0, 131070.0], [1555.0, 129023.0], [1539.0, 131078.0], [1659.0, 131076.0], [1651.0, 131056.0], [1643.0, 129026.0], [1635.0, 131071.0], [1603.0, 129034.0], [1611.0, 129029.0], [1627.0, 131062.0], [1619.0, 129019.0], [1723.0, 131074.0], [1715.0, 129025.0], [1707.0, 129026.0], [1699.0, 129031.0], [1667.0, 129027.0], [1683.0, 131068.0], [1787.0, 129028.0], [1779.0, 131067.0], [1771.0, 131067.0], [1763.0, 129024.0], [1731.0, 131064.5], [1739.0, 129030.0], [1755.0, 131077.0], [1747.0, 129028.0], [1851.0, 131065.0], [1843.0, 129012.0], [1835.0, 131070.0], [1827.0, 129026.0], [1795.0, 130044.5], [1803.0, 131061.0], [1819.0, 129021.0], [1867.0, 129016.0], [1915.0, 129023.0], [1859.0, 129038.0], [1899.0, 129014.0], [1891.0, 131068.0], [1883.0, 129019.0], [1875.0, 129013.0], [1979.0, 131054.5], [1963.0, 131067.0], [1939.0, 129033.0], [1931.0, 131068.0], [1923.0, 129016.0], [2043.0, 131057.0], [2035.0, 131046.0], [2027.0, 131070.0], [2019.0, 131069.0], [1995.0, 131075.0], [2011.0, 129022.0], [2003.0, 129028.0], [2118.0, 131040.0], [2150.0, 131048.0], [2070.0, 131052.0], [2134.0, 129027.0], [2102.0, 131094.0], [2086.0, 129022.0], [2198.0, 129018.0], [2294.0, 129032.0], [2182.0, 131068.0], [2262.0, 129011.0], [2246.0, 129012.0], [2230.0, 131069.0], [2214.0, 129027.0], [2422.0, 129022.5], [2406.0, 129027.0], [2390.0, 129018.0], [2374.0, 129026.0], [2310.0, 129062.0], [2358.0, 131066.0], [2342.0, 129033.0], [2550.0, 129025.0], [2518.0, 131068.0], [2438.0, 131072.0], [2630.0, 131071.0], [2566.0, 131079.0], [2806.0, 131029.33333333333], [2694.0, 131081.0], [2934.0, 129032.0], [2918.0, 129160.0], [2886.0, 131067.0], [2854.0, 131079.0], [2838.0, 129753.0], [2822.0, 129042.0], [3030.0, 129843.0], [3062.0, 131072.0], [3046.0, 131069.0], [2966.0, 131007.0], [3174.0, 129022.0], [3142.0, 129044.0], [3158.0, 128709.0], [3190.0, 130334.0], [3094.0, 128899.0], [3078.0, 129032.0], [3126.0, 128509.0], [3110.0, 130695.0], [3318.0, 131120.0], [3270.0, 130700.0], [3286.0, 131067.0], [3254.0, 129027.0], [3430.0, 128460.0], [3398.0, 129520.0], [3414.0, 129030.0], [3446.0, 131074.0], [3350.0, 129040.0], [3334.0, 129062.0], [3382.0, 131105.0], [3366.0, 131059.0], [3558.0, 129059.5], [3574.0, 131019.0], [3510.0, 130701.07692307692], [3494.0, 131179.0], [3462.0, 131176.0], [3542.0, 129056.0], [3702.0, 131068.0], [3686.0, 129013.5], [3734.0, 131068.0], [3830.0, 129081.0], [3750.0, 131015.0], [3894.0, 131052.0], [3878.0, 130137.99999999999], [3846.0, 129030.0], [3910.0, 130988.0], [3926.0, 129763.2], [3958.0, 129241.0], [3942.0, 129262.20000000001], [3990.0, 130075.25], [3974.0, 130292.66666666667], [2151.0, 131056.0], [2135.0, 129022.0], [2119.0, 129013.0], [2055.0, 130049.0], [2103.0, 129030.0], [2087.0, 129023.0], [2295.0, 129017.0], [2279.0, 129033.0], [2263.0, 129024.0], [2247.0, 129016.0], [2183.0, 129032.0], [2231.0, 129022.0], [2215.0, 129029.0], [2407.0, 129025.0], [2311.0, 129060.0], [2391.0, 131072.0], [2359.0, 131065.0], [2343.0, 129033.0], [2551.0, 129025.0], [2519.0, 131066.0], [2439.0, 129020.0], [2631.0, 131069.0], [2615.0, 129331.5], [2599.0, 129028.5], [2583.0, 129024.0], [2567.0, 130740.0], [2807.0, 131073.0], [2711.0, 129731.0], [2695.0, 129046.0], [2935.0, 129032.0], [2919.0, 130153.0], [2887.0, 131069.0], [2823.0, 129042.0], [2839.0, 128802.0], [2871.0, 129927.0], [2855.0, 131081.0], [3063.0, 131095.0], [3047.0, 131072.0], [2967.0, 131060.0], [2951.0, 129529.33333333333], [3031.0, 130692.0], [3175.0, 129026.0], [3191.0, 129494.0], [3143.0, 129818.0], [3159.0, 129109.0], [3095.0, 130099.0], [3079.0, 129024.0], [3127.0, 128361.0], [3111.0, 131078.0], [3319.0, 131120.0], [3271.0, 130750.0], [3255.0, 129402.0], [3239.0, 129034.0], [3287.0, 131065.5], [3399.0, 130570.0], [3351.0, 129040.0], [3415.0, 129031.0], [3335.0, 129061.0], [3383.0, 131102.0], [3367.0, 131071.0], [3447.0, 128753.0], [3431.0, 129027.0], [3559.0, 129037.0], [3527.0, 129061.0], [3575.0, 129127.0], [3463.0, 130734.5], [3511.0, 131116.0], [3495.0, 131160.0], [3591.0, 130179.29268292681], [3703.0, 129006.0], [3687.0, 129015.0], [3735.0, 131067.0], [3767.0, 131028.0], [3831.0, 128740.0], [3751.0, 131013.0], [3719.0, 131069.5], [3943.0, 129274.0], [3959.0, 129248.20000000003], [3911.0, 131003.5], [3927.0, 129274.0], [3863.0, 129687.0], [3847.0, 129024.0], [3895.0, 130019.5], [3879.0, 130051.0], [3991.0, 130074.0], [3975.0, 130269.0], [257.0, 10073.692307692309], [259.0, 9312.07142857143], [261.0, 9350.214285714286], [263.0, 8747.333333333334], [271.0, 21809.833333333336], [269.0, 10940.75], [265.0, 4516.55172413793], [267.0, 6545.4], [273.0, 8726.133333333333], [275.0, 9226.642857142857], [277.0, 7185.222222222222], [279.0, 8207.875], [287.0, 15382.35294117647], [285.0, 14414.888888888887], [281.0, 10931.583333333332], [283.0, 52042.2], [289.0, 9316.714285714284], [291.0, 3.466666666666667], [293.0, 3.0], [295.0, 4.230769230769231], [303.0, 6559.55], [301.0, 7667.470588235294], [297.0, 3.5], [299.0, 6.066666666666667], [305.0, 7287.611111111111], [307.0, 14343.111111111113], [309.0, 12.200000000000001], [311.0, 14525.777777777777], [319.0, 7675.294117647059], [317.0, 5927.272727272727], [313.0, 14568.666666666666], [315.0, 8686.133333333333], [321.0, 14518.666666666666], [323.0, 32648.0], [325.0, 6905.526315789474], [327.0, 5872.863636363636], [335.0, 10028.307692307691], [333.0, 7275.222222222223], [329.0, 14347.666666666666], [331.0, 5433.958333333333], [337.0, 5253.68], [339.0, 7246.055555555557], [341.0, 8146.625], [343.0, 8162.0], [351.0, 7283.777777777777], [349.0, 5467.166666666668], [345.0, 6518.7], [347.0, 6561.55], [353.0, 6513.4], [355.0, 65364.0], [357.0, 26097.8], [359.0, 43699.666666666664], [367.0, 5.176470588235294], [365.0, 83.44897959183672], [361.0, 37.041666666666664], [363.0, 2150.6769230769232], [369.0, 7239.055555555556], [371.0, 6455.750000000001], [381.0, 130246.0], [373.0, 7238.277777777777], [375.0, 6557.099999999999], [383.0, 8725.4], [377.0, 6556.55], [379.0, 6204.0952380952385], [385.0, 6205.761904761905], [387.0, 11845.90909090909], [389.0, 6517.65], [391.0, 5953.772727272727], [399.0, 6206.285714285715], [397.0, 6515.8], [393.0, 9307.571428571428], [395.0, 4827.740740740741], [401.0, 5668.565217391304], [403.0, 32565.5], [405.0, 5687.478260869565], [407.0, 5929.772727272727], [415.0, 6516.05], [413.0, 5674.304347826087], [409.0, 10879.416666666666], [411.0, 6866.8421052631575], [417.0, 6525.4], [419.0, 4495.620689655172], [421.0, 5927.636363636363], [423.0, 6459.050000000001], [431.0, 3311.5641025641025], [429.0, 6158.809523809524], [425.0, 2753.8510638297876], [427.0, 10763.583333333334], [433.0, 4968.115384615385], [435.0, 8607.866666666667], [437.0, 5381.333333333333], [439.0, 7171.11111111111], [447.0, 10817.625], [445.0, 8066.5625], [441.0, 4781.518518518519], [443.0, 4964.923076923077], [449.0, 5957.181818181818], [451.0, 4845.0], [453.0, 10878.041666666666], [455.0, 5926.227272727273], [463.0, 4072.875], [461.0, 5430.833333333333], [457.0, 6207.0952380952385], [459.0, 6858.631578947368], [467.0, 2196.15], [465.0, 11844.0], [477.0, 4305.833333333333], [479.0, 5700.260869565217], [469.0, 5619.826086956522], [471.0, 9623.814814814814], [473.0, 5163.92], [475.0, 4032.90625], [481.0, 3847.8529411764703], [483.0, 7695.117647058823], [485.0, 3046.8604651162786], [487.0, 5461.124999999999], [495.0, 11361.82608695652], [493.0, 5463.625000000001], [489.0, 5466.833333333334], [491.0, 4855.296296296296], [497.0, 4072.78125], [499.0, 5045.807692307692], [501.0, 4.791666666666666], [503.0, 3833.0000000000005], [511.0, 3451.815789473684], [509.0, 4123.21875], [505.0, 5045.0], [507.0, 10107.615384615385], [514.0, 8722.133333333333], [526.0, 5035.346153846153], [518.0, 43693.333333333336], [542.0, 3133.1860465116283], [538.0, 4954.423076923077], [530.0, 4860.962962962963], [534.0, 4955.307692307692], [522.0, 4826.592592592593], [550.0, 4612.892857142858], [546.0, 7164.722222222223], [558.0, 4972.307692307692], [554.0, 4771.185185185185], [574.0, 8.25], [570.0, 4035.65625], [562.0, 3358.025641025641], [566.0, 4304.333333333334], [582.0, 2984.659090909091], [578.0, 3468.9473684210525], [590.0, 5051.923076923076], [586.0, 4239.806451612903], [606.0, 4038.34375], [602.0, 3086.1904761904766], [594.0, 4506.310344827587], [598.0, 3400.657894736842], [614.0, 6882.842105263158], [610.0, 6170.095238095238], [622.0, 2854.5434782608695], [618.0, 3871.823529411765], [638.0, 4793.689655172414], [634.0, 65536.5], [626.0, 4550.068965517241], [630.0, 5079.692307692308], [646.0, 3783.5588235294113], [642.0, 1996.6119402985075], [654.0, 12990.0], [650.0, 4374.0], [670.0, 1854.2957746478871], [666.0, 2986.590909090909], [658.0, 9640.777777777777], [662.0, 2384.9473684210525], [674.0, 5879.000000000001], [678.0, 4041.15625], [686.0, 3753.1428571428573], [682.0, 2267.089552238806], [698.0, 7657.676470588236], [702.0, 1732.828947368421], [690.0, 3365.8205128205127], [694.0, 5965.045454545455], [710.0, 3977.878787878788], [706.0, 3211.878048780488], [718.0, 7952.909090909091], [714.0, 5251.92], [734.0, 3128.8571428571427], [730.0, 3862.4411764705883], [722.0, 1936.9705882352941], [726.0, 3554.4324324324325], [738.0, 64558.0], [742.0, 65566.5], [746.0, 1748.9113924050632], [750.0, 131062.0], [762.0, 2225.5593220338983], [766.0, 3549.8918918918916], [754.0, 129029.0], [758.0, 8065.875], [774.0, 2296.358208955224], [770.0, 453.50000000000006], [782.0, 18732.428571428572], [778.0, 11916.0], [798.0, 129002.5], [794.0, 4349.46511627907], [786.0, 3403.1052631578946], [790.0, 2816.938775510204], [802.0, 129014.0], [806.0, 6453.4], [814.0, 10080.333333333334], [830.0, 1977.151515151515], [818.0, 129000.0], [822.0, 128965.0], [826.0, 129032.0], [810.0, 2569.294117647059], [858.0, 8519.333333333332], [846.0, 131078.0], [842.0, 520.5], [862.0, 128962.0], [854.0, 131072.0], [866.0, 32496.75], [870.0, 131075.0], [874.0, 131072.0], [878.0, 131067.0], [882.0, 43791.0], [898.0, 43690.666666666664], [922.0, 129028.0], [910.0, 131063.0], [902.0, 65534.0], [926.0, 22018.833333333336], [914.0, 131076.0], [906.0, 19165.14285714286], [918.0, 131079.0], [934.0, 131075.0], [954.0, 131074.0], [930.0, 131076.0], [950.0, 131070.0], [946.0, 131069.0], [942.0, 131070.0], [938.0, 129025.0], [990.0, 129025.0], [986.0, 129027.0], [982.0, 129033.0], [978.0, 129027.0], [974.0, 131063.0], [962.0, 131070.5], [966.0, 131070.0], [970.0, 131064.0], [1018.0, 129008.0], [994.0, 131072.0], [1014.0, 131071.0], [1010.0, 131065.0], [1006.0, 131070.0], [1002.0, 131076.0], [1084.0, 131069.0], [1076.0, 129025.0], [1036.0, 129025.0], [1060.0, 129037.0], [1052.0, 131060.0], [1044.0, 129019.0], [1140.0, 131074.0], [1100.0, 131058.0], [1092.0, 131065.0], [1132.0, 129024.0], [1124.0, 129028.0], [1116.0, 129016.0], [1180.0, 129022.0], [1172.0, 129040.0], [1164.0, 129076.0], [1156.0, 131067.0], [1260.0, 129022.0], [1252.0, 129022.5], [1244.0, 131074.0], [1236.0, 131077.0], [1340.0, 129031.0], [1332.0, 129031.0], [1324.0, 131075.0], [1316.0, 129035.0], [1308.0, 131061.0], [1292.0, 129020.0], [1300.0, 131069.0], [1356.0, 131067.0], [1396.0, 131071.0], [1388.0, 129030.0], [1380.0, 130065.0], [1364.0, 129054.0], [1348.0, 131077.0], [1468.0, 129029.0], [1460.0, 129029.0], [1452.0, 129032.0], [1444.0, 131076.0], [1436.0, 129021.0], [1412.0, 129035.0], [1420.0, 129029.0], [1428.0, 131078.0], [1484.0, 131055.0], [1524.0, 131053.0], [1476.0, 131061.0], [1516.0, 131060.0], [1508.0, 131074.0], [1500.0, 129023.0], [1492.0, 129016.0], [1596.0, 131067.0], [1588.0, 131071.5], [1564.0, 131067.0], [1540.0, 131077.0], [1548.0, 129011.0], [1556.0, 129005.0], [1612.0, 131070.0], [1652.0, 131086.0], [1604.0, 129033.0], [1644.0, 129024.0], [1636.0, 129022.0], [1628.0, 131060.0], [1620.0, 129029.0], [1724.0, 129021.0], [1716.0, 129020.0], [1708.0, 129023.0], [1700.0, 129033.0], [1668.0, 131065.0], [1676.0, 130041.5], [1684.0, 131060.0], [1788.0, 131076.0], [1772.0, 131073.0], [1764.0, 129024.0], [1756.0, 129024.0], [1748.0, 131076.0], [1852.0, 131051.0], [1844.0, 131067.0], [1836.0, 129026.0], [1828.0, 129022.0], [1820.0, 131068.0], [1796.0, 129021.0], [1804.0, 131064.0], [1812.0, 131081.0], [1916.0, 129016.0], [1908.0, 131068.0], [1900.0, 129023.0], [1892.0, 131065.0], [1884.0, 131069.0], [1868.0, 129027.0], [1860.0, 131070.0], [1876.0, 129019.0], [1980.0, 129044.0], [1972.0, 131059.5], [1964.0, 131069.0], [1956.0, 129021.5], [1948.0, 129024.5], [1932.0, 131068.0], [1924.0, 131068.0], [1940.0, 129030.5], [1996.0, 131081.0], [2036.0, 131053.0], [1988.0, 129032.0], [2012.0, 131065.0], [2004.0, 129024.0], [2152.0, 131067.0], [2136.0, 129025.0], [2120.0, 131075.0], [2104.0, 129036.0], [2088.0, 129022.0], [2280.0, 129037.0], [2296.0, 129033.0], [2200.0, 131080.0], [2184.0, 129029.0], [2264.0, 129022.0], [2248.0, 129028.0], [2232.0, 131061.0], [2424.0, 130048.0], [2408.0, 129024.0], [2376.0, 129024.66666666667], [2360.0, 131065.0], [2328.0, 129806.75], [2312.0, 129060.0], [2344.0, 129035.0], [2552.0, 129020.0], [2520.0, 131068.0], [2440.0, 131071.0], [2568.0, 129030.0], [2808.0, 131072.0], [2712.0, 130876.42857142857], [2696.0, 129047.0], [2840.0, 129802.0], [2920.0, 129946.0], [2888.0, 131068.0], [2872.0, 130787.0], [2856.0, 129028.0], [2824.0, 129043.0], [3064.0, 129054.0], [3048.0, 131069.0], [2968.0, 131057.0], [3032.0, 129793.0], [2952.0, 130487.0], [3176.0, 129030.0], [3144.0, 129168.0], [3096.0, 129034.0], [3080.0, 128759.0], [3128.0, 128261.0], [3112.0, 129644.0], [3160.0, 129057.0], [3320.0, 129069.0], [3272.0, 129549.0], [3304.0, 130064.5], [3256.0, 129353.0], [3240.0, 129032.5], [3288.0, 131065.0], [3448.0, 131073.0], [3432.0, 129027.0], [3416.0, 129024.0], [3336.0, 129064.0], [3352.0, 129037.0], [3384.0, 131083.0], [3400.0, 129570.0], [3480.0, 130836.75], [3464.0, 131155.0], [3576.0, 129573.0], [3512.0, 131119.0], [3496.0, 131156.0], [3528.0, 129077.0], [3560.0, 129085.0], [3544.0, 129056.0], [3704.0, 129005.0], [3768.0, 131027.0], [3720.0, 131071.0], [3752.0, 131016.0], [3736.0, 131067.0], [3960.0, 130140.31818181818], [3944.0, 129274.0], [3912.0, 131004.5], [3848.0, 129023.0], [3864.0, 130026.5], [3896.0, 128978.0], [3880.0, 130106.0], [3928.0, 129276.0], [3992.0, 130093.0], [3976.0, 129620.50000000001], [2073.0, 130048.0], [2153.0, 131068.0], [2057.0, 130045.5], [2137.0, 129019.0], [2121.0, 129010.0], [2105.0, 129038.0], [2089.0, 129023.0], [2281.0, 129034.0], [2297.0, 129018.0], [2201.0, 129025.0], [2185.0, 129024.0], [2265.0, 129018.0], [2249.0, 129010.0], [2217.0, 129029.0], [2425.0, 129019.0], [2409.0, 129024.0], [2393.0, 129697.66666666667], [2377.0, 129025.0], [2361.0, 129028.0], [2313.0, 129066.0], [2345.0, 129027.0], [2553.0, 129023.0], [2521.0, 131065.0], [2441.0, 129018.0], [2585.0, 129022.0], [2633.0, 130687.33333333333], [2617.0, 129505.5], [2601.0, 129025.0], [2569.0, 129034.0], [2809.0, 131070.0], [2793.0, 129280.93333333332], [2713.0, 131062.0], [2697.0, 129042.0], [2937.0, 129021.0], [2921.0, 129508.0], [2889.0, 131069.0], [2873.0, 130437.0], [2825.0, 129032.0], [2841.0, 128851.0], [3049.0, 131071.0], [3065.0, 129040.0], [2969.0, 131074.0], [2953.0, 129022.0], [3033.0, 130885.0], [3193.0, 130471.5], [3145.0, 128417.0], [3177.0, 129028.0], [3097.0, 129031.0], [3081.0, 129760.0], [3129.0, 128460.0], [3161.0, 129007.0], [3321.0, 131120.0], [3273.0, 131197.0], [3305.0, 129793.0], [3257.0, 130346.0], [3289.0, 131068.0], [3433.0, 129028.0], [3449.0, 129024.0], [3401.0, 129620.0], [3417.0, 129025.0], [3353.0, 129035.0], [3337.0, 129065.0], [3385.0, 131106.0], [3369.0, 128396.0], [3513.0, 131106.0], [3497.0, 131137.0], [3529.0, 129060.0], [3545.0, 129053.0], [3577.0, 131040.0], [3561.0, 129103.0], [3481.0, 131175.0], [3673.0, 129647.18300653592], [3705.0, 129006.0], [3689.0, 130036.5], [3721.0, 131071.0], [3769.0, 131028.0], [3833.0, 129074.0], [3737.0, 131067.0], [3753.0, 131014.0], [3961.0, 129023.66666666667], [3913.0, 130985.0], [3945.0, 129820.0], [3849.0, 129024.0], [3865.0, 129050.0], [3881.0, 130066.0], [3929.0, 129804.0], [3993.0, 130053.0], [3977.0, 130383.8], [1085.0, 129025.0], [1077.0, 129024.0], [1069.0, 129024.0], [1061.0, 129036.0], [1053.0, 131060.0], [1029.0, 129013.5], [1037.0, 129005.0], [1045.0, 129022.0], [1149.0, 131071.5], [1141.0, 129021.0], [1133.0, 129023.0], [1125.0, 129029.0], [1117.0, 129016.0], [1101.0, 131056.0], [1093.0, 131064.0], [1109.0, 131058.5], [1181.0, 129023.0], [1173.0, 129039.0], [1165.0, 131119.0], [1157.0, 131066.5], [1277.0, 129016.0], [1269.0, 131068.0], [1261.0, 129019.0], [1237.0, 129029.0], [1229.0, 129025.0], [1293.0, 129018.0], [1333.0, 129040.0], [1285.0, 129027.0], [1325.0, 131087.0], [1317.0, 131096.0], [1309.0, 131063.0], [1301.0, 129021.0], [1405.0, 131077.0], [1397.0, 131072.0], [1389.0, 129029.0], [1365.0, 131072.0], [1349.0, 131070.0], [1357.0, 131063.0], [1421.0, 129031.0], [1469.0, 129009.0], [1413.0, 131086.0], [1453.0, 131087.0], [1437.0, 131071.0], [1429.0, 131079.0], [1533.0, 130051.5], [1525.0, 131049.0], [1517.0, 129025.0], [1509.0, 129022.0], [1501.0, 131074.0], [1477.0, 129023.0], [1485.0, 131078.0], [1493.0, 131078.0], [1549.0, 129013.0], [1597.0, 131060.0], [1541.0, 131072.0], [1565.0, 131067.0], [1557.0, 131072.0], [1653.0, 131069.0], [1661.0, 129022.0], [1613.0, 129021.0], [1605.0, 131085.0], [1645.0, 129019.0], [1637.0, 129014.0], [1621.0, 129029.0], [1725.0, 131054.0], [1717.0, 129015.0], [1709.0, 129031.0], [1701.0, 129023.0], [1693.0, 131069.0], [1677.0, 129018.0], [1669.0, 131072.0], [1685.0, 131061.0], [1741.0, 130057.0], [1789.0, 131069.0], [1733.0, 129033.0], [1773.0, 131068.0], [1765.0, 131074.0], [1757.0, 129024.0], [1749.0, 131074.0], [1853.0, 131063.0], [1845.0, 129024.0], [1837.0, 129028.0], [1829.0, 129014.0], [1821.0, 131067.0], [1797.0, 129022.0], [1805.0, 131060.0], [1813.0, 129035.0], [1909.0, 130049.5], [1917.0, 129022.0], [1869.0, 131072.0], [1861.0, 131084.0], [1901.0, 129032.0], [1893.0, 131063.0], [1885.0, 129026.0], [1877.0, 129023.0], [1981.0, 131091.0], [1965.0, 131066.0], [1933.0, 131068.0], [1925.0, 129020.0], [2045.0, 129025.0], [2037.0, 131045.5], [2021.0, 131069.5], [2013.0, 131075.0], [1989.0, 129031.0], [1997.0, 129029.0], [2005.0, 129009.0], [2154.0, 131057.5], [2138.0, 129023.0], [2122.0, 129029.0], [2106.0, 129042.0], [2090.0, 129024.0], [2282.0, 129030.0], [2202.0, 131062.0], [2186.0, 129026.0], [2266.0, 131066.0], [2250.0, 129027.0], [2234.0, 130379.0], [2426.0, 131076.0], [2410.0, 131074.0], [2394.0, 131065.0], [2330.0, 129039.0], [2314.0, 129061.0], [2346.0, 129033.0], [2554.0, 131064.0], [2522.0, 131066.0], [2442.0, 129022.0], [2618.0, 129631.0], [2586.0, 129035.0], [2570.0, 129031.0], [2810.0, 131068.0], [2794.0, 129103.0], [2714.0, 130785.75], [2698.0, 130205.0], [2842.0, 128897.0], [2922.0, 129700.5], [2890.0, 131032.0], [2874.0, 131087.0], [2826.0, 129027.0], [3050.0, 131068.0], [3066.0, 131089.0], [2970.0, 131071.0], [2954.0, 130198.0], [3034.0, 129742.0], [3194.0, 129844.0], [3178.0, 129026.0], [3146.0, 128317.0], [3098.0, 129018.0], [3082.0, 129811.0], [3130.0, 129460.0], [3114.0, 130283.5], [3162.0, 129021.0], [3322.0, 129069.0], [3274.0, 129499.0], [3306.0, 131115.0], [3258.0, 129239.0], [3242.0, 129029.5], [3290.0, 131065.0], [3434.0, 130055.0], [3402.0, 129670.0], [3354.0, 129039.0], [3338.0, 128235.0], [3386.0, 131082.0], [3370.0, 128346.0], [3418.0, 129036.0], [3514.0, 131111.0], [3498.0, 131162.0], [3578.0, 131021.0], [3482.0, 131073.5], [3546.0, 129050.0], [3530.0, 129074.0], [3706.0, 129006.0], [3690.0, 130380.0], [3674.0, 129014.0], [3770.0, 131028.0], [3722.0, 131071.0], [3754.0, 131016.0], [3738.0, 130303.28571428571], [3850.0, 129022.0], [3882.0, 129052.0], [3866.0, 129000.0], [3898.0, 130017.25], [3930.0, 129540.26315789475], [3962.0, 128968.5], [3946.0, 129274.33333333333], [3994.0, 130067.83333333334], [3978.0, 130311.64285714284], [2139.0, 129025.0], [2123.0, 129010.0], [2107.0, 129027.0], [2059.0, 130043.5], [2091.0, 129019.0], [2075.0, 129026.0], [2283.0, 129027.0], [2299.0, 129029.0], [2203.0, 131063.0], [2267.0, 130040.5], [2251.0, 129007.0], [2235.0, 129020.0], [2219.0, 129028.0], [2411.0, 129023.0], [2427.0, 129015.0], [2315.0, 129050.0], [2395.0, 131068.0], [2379.0, 129024.0], [2347.0, 129012.0], [2539.0, 129174.7857142857], [2443.0, 131074.0], [2619.0, 130625.0], [2603.0, 129029.0], [2587.0, 129031.0], [2571.0, 129030.0], [2811.0, 131054.0], [2795.0, 130051.0], [2939.0, 129491.0], [2923.0, 128903.0], [2891.0, 129982.0], [2875.0, 129235.0], [2827.0, 129028.0], [2843.0, 129901.0], [2859.0, 131068.0], [3051.0, 131070.0], [3067.0, 129047.0], [2971.0, 131070.0], [2955.0, 129390.0], [3195.0, 130192.0], [3179.0, 129299.0], [3147.0, 128566.0], [3099.0, 129023.0], [3083.0, 129860.0], [3131.0, 131103.0], [3115.0, 130193.0], [3163.0, 129023.0], [3275.0, 130148.0], [3259.0, 129696.0], [3291.0, 131068.0], [3355.0, 129403.0], [3403.0, 130220.0], [3339.0, 128637.0], [3387.0, 129781.0], [3371.0, 129495.0], [3451.0, 130049.0], [3435.0, 131070.0], [3419.0, 129035.0], [3579.0, 131072.0], [3483.0, 131159.0], [3515.0, 130033.33333333333], [3499.0, 131134.0], [3547.0, 129062.0], [3707.0, 128989.0], [3691.0, 131062.0], [3675.0, 129015.0], [3755.0, 130193.11904761905], [3835.0, 129074.0], [3739.0, 130330.66666666667], [3723.0, 131070.0], [3947.0, 129278.0], [3963.0, 129664.0], [3915.0, 131002.5], [3931.0, 129246.0], [3867.0, 129011.0], [3851.0, 129022.0], [3899.0, 129370.0], [3883.0, 131032.0], [3995.0, 130055.625], [3979.0, 130199.0], [519.0, 21713.166666666664], [527.0, 2900.733333333333], [515.0, 130210.0], [543.0, 4770.185185185185], [539.0, 5365.666666666667], [531.0, 3726.7714285714283], [535.0, 5365.208333333333], [523.0, 4342.366666666666], [551.0, 4306.8], [547.0, 4189.645161290323], [559.0, 3679.114285714286], [555.0, 5366.249999999999], [575.0, 9368.535714285714], [571.0, 4452.172413793103], [563.0, 4034.4375], [567.0, 4313.666666666667], [583.0, 4687.071428571428], [579.0, 3364.7948717948716], [591.0, 3494.5405405405404], [587.0, 4387.8], [607.0, 4050.59375], [603.0, 5168.28], [595.0, 4860.481481481481], [599.0, 3493.3783783783783], [615.0, 4669.642857142857], [611.0, 3552.864864864865], [623.0, 5714.913043478261], [619.0, 8.838709677419356], [639.0, 10955.333333333332], [635.0, 18733.714285714286], [627.0, 4588.758620689656], [631.0, 3785.7999999999997], [647.0, 3864.411764705882], [643.0, 3236.3], [655.0, 4.0], [651.0, 7729.588235294118], [671.0, 3251.4634146341464], [667.0, 11925.545454545454], [659.0, 6.41025641025641], [663.0, 2173.4590163934427], [679.0, 3593.888888888889], [675.0, 8607.533333333333], [687.0, 3493.837837837838], [683.0, 2426.7857142857147], [699.0, 4522.55172413793], [703.0, 8741.766666666666], [691.0, 7597.176470588235], [695.0, 8068.125], [711.0, 5249.68], [719.0, 4371.633333333333], [707.0, 3550.810810810811], [715.0, 9368.0], [731.0, 5046.153846153846], [735.0, 131039.0], [723.0, 1976.657894736842], [727.0, 3368.1794871794873], [739.0, 32514.0], [747.0, 3037.6888888888893], [751.0, 130082.0], [743.0, 4323.405405405406], [763.0, 5044.115384615385], [767.0, 1939.355769230769], [755.0, 65525.5], [759.0, 6845.763157894737], [783.0, 1925.1449275362318], [771.0, 7737.342105263157], [779.0, 3280.675], [775.0, 254.7083333333333], [795.0, 5246.1612903225805], [787.0, 4801.586206896552], [791.0, 402.0459770114943], [803.0, 4.25], [815.0, 506.11965811965825], [807.0, 2486.4807692307695], [827.0, 128958.0], [831.0, 2121.6885245901644], [819.0, 129000.0], [823.0, 129031.0], [811.0, 8327.176470588236], [859.0, 7662.636363636363], [843.0, 86698.33333333333], [847.0, 129013.0], [851.0, 6507.65], [855.0, 131072.0], [863.0, 131072.0], [839.0, 129020.0], [835.0, 129029.0], [867.0, 33026.75], [871.0, 3080.791666666667], [879.0, 66058.5], [875.0, 131068.0], [895.0, 1431.4615384615386], [899.0, 131068.0], [911.0, 131058.5], [927.0, 1.5], [915.0, 131081.0], [907.0, 16764.25], [923.0, 129026.0], [903.0, 131065.0], [919.0, 131078.0], [935.0, 129027.0], [955.0, 131075.0], [931.0, 131079.0], [951.0, 131070.0], [947.0, 131071.0], [943.0, 131070.0], [939.0, 129024.0], [991.0, 131075.0], [987.0, 129029.0], [983.0, 129032.0], [979.0, 129030.0], [975.0, 131071.0], [967.0, 131069.0], [971.0, 131072.0], [1023.0, 129015.0], [1019.0, 129007.0], [1015.0, 129035.0], [1011.0, 131061.0], [1007.0, 131068.0], [995.0, 131070.0], [999.0, 130046.5], [1003.0, 131054.0], [1086.0, 131068.0], [1078.0, 131076.0], [1062.0, 129035.0], [1054.0, 131061.0], [1030.0, 129017.0], [1038.0, 129023.0], [1046.0, 129025.0], [1142.0, 131066.0], [1134.0, 129020.0], [1126.0, 129022.0], [1118.0, 129020.0], [1110.0, 131070.0], [1094.0, 131060.0], [1182.0, 129022.0], [1174.0, 129038.0], [1270.0, 131065.0], [1278.0, 129028.0], [1230.0, 130158.03703703704], [1262.0, 129021.0], [1254.0, 129020.0], [1246.0, 130045.0], [1238.0, 129012.0], [1342.0, 129034.0], [1334.0, 129031.0], [1326.0, 129031.0], [1318.0, 129049.0], [1310.0, 129037.0], [1286.0, 129028.0], [1294.0, 129019.0], [1302.0, 131055.0], [1398.0, 131072.0], [1406.0, 131086.0], [1390.0, 129026.0], [1382.0, 130064.5], [1358.0, 131066.0], [1350.0, 131070.0], [1470.0, 131063.0], [1462.0, 130041.0], [1454.0, 129018.0], [1446.0, 131064.5], [1438.0, 129022.0], [1414.0, 129028.0], [1422.0, 129018.0], [1430.0, 129031.0], [1534.0, 129030.0], [1526.0, 131053.0], [1518.0, 131059.0], [1502.0, 131077.0], [1478.0, 131072.0], [1486.0, 129031.0], [1494.0, 129023.0], [1598.0, 131058.0], [1590.0, 130048.5], [1566.0, 131068.0], [1542.0, 129029.0], [1550.0, 131071.0], [1558.0, 129027.0], [1614.0, 129021.0], [1654.0, 131069.0], [1606.0, 130057.0], [1646.0, 129012.0], [1638.0, 129023.0], [1630.0, 131070.0], [1622.0, 129028.0], [1726.0, 131058.0], [1718.0, 129021.0], [1710.0, 129029.0], [1702.0, 129025.0], [1694.0, 131080.0], [1670.0, 129029.0], [1678.0, 131070.0], [1686.0, 131060.0], [1790.0, 131072.0], [1734.0, 129022.5], [1774.0, 131062.0], [1766.0, 129024.0], [1758.0, 129011.0], [1750.0, 131074.0], [1854.0, 131052.0], [1846.0, 131066.0], [1838.0, 129024.0], [1830.0, 131071.0], [1822.0, 131061.0], [1806.0, 131067.0], [1918.0, 129017.0], [1910.0, 131075.0], [1902.0, 131074.0], [1894.0, 131053.0], [1886.0, 131065.0], [1862.0, 131080.0], [1870.0, 131071.0], [1878.0, 129022.0], [1982.0, 131088.0], [1974.0, 131058.5], [1966.0, 131067.0], [1958.0, 130050.0], [1950.0, 129023.0], [1926.0, 131068.0], [1942.0, 129030.0], [1998.0, 129024.0], [1990.0, 131082.0], [2022.0, 131071.0], [2014.0, 131069.0], [2006.0, 131077.0], [2140.0, 131075.0], [2124.0, 129028.0], [2108.0, 129044.0], [2092.0, 129022.0], [2204.0, 131069.0], [2284.0, 129027.0], [2252.0, 129008.0], [2220.0, 129026.0], [2188.0, 129025.0], [2428.0, 131075.0], [2412.0, 129028.0], [2396.0, 131066.0], [2332.0, 129039.5], [2316.0, 129042.0], [2348.0, 129013.0], [2556.0, 131061.5], [2540.0, 129026.0], [2524.0, 131067.0], [2508.0, 129110.3043478261], [2444.0, 131067.0], [2620.0, 130054.5], [2588.0, 129021.0], [2572.0, 129892.0], [2812.0, 131051.0], [2844.0, 128449.0], [2924.0, 129903.0], [2876.0, 131068.0], [2860.0, 129938.0], [2828.0, 129030.0], [3052.0, 131064.0], [3068.0, 129041.0], [3036.0, 131013.5], [2956.0, 129336.0], [3196.0, 130140.0], [3148.0, 128915.0], [3180.0, 129199.0], [3100.0, 129028.0], [3084.0, 129561.0], [3132.0, 130056.0], [3116.0, 131067.0], [3164.0, 129021.0], [3324.0, 130093.5], [3276.0, 129943.0], [3308.0, 129073.5], [3260.0, 129024.0], [3244.0, 129030.5], [3292.0, 131069.0], [3404.0, 131034.33333333334], [3420.0, 129164.0], [3388.0, 131082.0], [3340.0, 128584.0], [3356.0, 130408.0], [3372.0, 129919.5], [3452.0, 129017.0], [3436.0, 129256.0], [3468.0, 130584.3495934959], [3484.0, 130615.0], [3516.0, 130461.0], [3500.0, 131162.0], [3580.0, 131069.0], [3532.0, 129067.5], [3548.0, 129060.0], [3692.0, 131064.0], [3708.0, 128983.0], [3676.0, 129015.0], [3836.0, 129071.0], [3772.0, 131028.0], [3724.0, 131071.0], [3756.0, 131016.0], [3740.0, 131076.0], [3964.0, 129936.0], [3916.0, 130280.0], [3948.0, 129244.0], [3900.0, 129576.06666666665], [3868.0, 129009.5], [3884.0, 129713.66666666667], [3932.0, 129861.55555555556], [3996.0, 130058.0], [3980.0, 130191.0], [2077.0, 129025.0], [2125.0, 129010.0], [2109.0, 129043.0], [2093.0, 129018.0], [2061.0, 131069.0], [2301.0, 129023.66666666667], [2285.0, 129028.0], [2237.0, 130036.5], [2221.0, 129026.0], [2413.0, 129029.0], [2429.0, 129014.0], [2333.0, 131090.0], [2317.0, 129041.0], [2397.0, 131057.0], [2381.0, 129023.5], [2365.0, 129028.0], [2349.0, 129017.0], [2557.0, 131067.0], [2541.0, 129021.0], [2509.0, 129022.0], [2445.0, 131065.0], [2605.0, 129027.0], [2589.0, 129021.0], [2573.0, 129192.0], [2813.0, 129025.0], [2701.0, 129049.0], [2941.0, 129709.0], [2925.0, 129599.0], [2893.0, 131025.0], [2877.0, 130537.0], [2829.0, 129024.0], [2845.0, 128470.0], [2861.0, 129015.0], [3069.0, 131095.0], [3053.0, 131062.0], [2957.0, 129541.0], [3197.0, 131069.0], [3149.0, 129047.0], [3181.0, 129547.0], [3101.0, 129027.0], [3085.0, 129609.0], [3133.0, 129054.0], [3117.0, 130142.0], [3165.0, 129023.0], [3325.0, 129582.5], [3277.0, 130098.0], [3309.0, 131125.0], [3261.0, 129650.0], [3293.0, 130036.0], [3437.0, 131070.0], [3405.0, 130898.81818181815], [3421.0, 129064.0], [3453.0, 129022.0], [3357.0, 129242.0], [3341.0, 129585.0], [3389.0, 128579.0], [3373.0, 131112.0], [3469.0, 130004.50434782609], [3501.0, 131170.0], [3517.0, 129062.0], [3581.0, 131020.0], [3549.0, 129049.0], [3709.0, 128979.0], [3693.0, 131064.0], [3677.0, 129014.0], [3837.0, 130164.11627906977], [3741.0, 131074.0], [3757.0, 131019.0], [3965.0, 130001.42857142857], [3917.0, 130982.0], [3949.0, 129246.0], [3901.0, 131006.0], [3869.0, 129008.0], [3885.0, 129044.0], [3933.0, 129280.6], [3997.0, 130054.0], [3981.0, 130153.88888888888], [1087.0, 129024.0], [1079.0, 129024.0], [1063.0, 129023.0], [1055.0, 131059.0], [1031.0, 129009.0], [1039.0, 129020.0], [1047.0, 131073.0], [1151.0, 131069.5], [1143.0, 129024.0], [1127.0, 129022.0], [1119.0, 129019.0], [1095.0, 131058.0], [1103.0, 131054.0], [1111.0, 131049.66666666667], [1183.0, 129025.5], [1175.0, 129039.0], [1167.0, 129051.0], [1159.0, 129022.0], [1279.0, 131067.0], [1271.0, 131062.0], [1263.0, 129011.0], [1239.0, 129010.0], [1335.0, 129038.0], [1287.0, 129018.0], [1327.0, 131088.0], [1319.0, 131097.0], [1311.0, 129033.0], [1303.0, 129020.0], [1407.0, 131084.0], [1399.0, 131073.0], [1391.0, 129024.0], [1383.0, 130060.0], [1351.0, 130050.5], [1423.0, 129031.0], [1471.0, 129025.0], [1415.0, 131078.0], [1455.0, 131075.0], [1447.0, 131072.0], [1439.0, 131069.0], [1431.0, 131078.0], [1527.0, 131048.0], [1535.0, 129029.0], [1487.0, 129029.0], [1479.0, 131067.0], [1519.0, 129024.0], [1511.0, 130048.0], [1503.0, 129028.0], [1495.0, 131073.0], [1551.0, 129027.0], [1599.0, 129024.0], [1567.0, 131067.0], [1559.0, 131067.0], [1543.0, 129016.0], [1663.0, 130047.0], [1655.0, 129031.0], [1647.0, 129013.0], [1639.0, 129015.0], [1631.0, 131073.0], [1607.0, 131080.0], [1615.0, 129021.0], [1623.0, 129026.0], [1727.0, 131056.0], [1719.0, 129024.0], [1711.0, 129028.0], [1703.0, 129026.0], [1695.0, 131067.0], [1679.0, 129024.0], [1671.0, 129027.0], [1687.0, 131060.0], [1791.0, 131072.0], [1783.0, 131062.0], [1775.0, 131067.0], [1767.0, 131071.0], [1759.0, 129018.0], [1735.0, 131075.0], [1743.0, 129033.5], [1751.0, 129024.0], [1855.0, 131061.0], [1847.0, 129020.0], [1839.0, 129012.0], [1831.0, 129012.0], [1823.0, 131071.0], [1799.0, 129022.33333333333], [1807.0, 131056.0], [1815.0, 129030.0], [1871.0, 129029.0], [1911.0, 129025.0], [1863.0, 129030.0], [1903.0, 129022.0], [1887.0, 129024.0], [1879.0, 129027.0], [1935.0, 131067.5], [1983.0, 129028.0], [1967.0, 131065.0], [1943.0, 129029.0], [1927.0, 131074.0], [2047.0, 129027.0], [2039.0, 131060.5], [2023.0, 131070.0], [2015.0, 131069.0], [1991.0, 131075.0], [1999.0, 131073.0], [2007.0, 129013.0], [2078.0, 129012.0], [2062.0, 131074.0], [2142.0, 130047.5], [2126.0, 129027.0], [2110.0, 129042.0], [2094.0, 131072.0], [2286.0, 129028.0], [2302.0, 129024.0], [2206.0, 130052.0], [2190.0, 129020.0], [2254.0, 129007.0], [2238.0, 131071.0], [2222.0, 129026.0], [2430.0, 131070.0], [2414.0, 131077.0], [2398.0, 129028.0], [2366.0, 129023.0], [2334.0, 131079.0], [2318.0, 129041.0], [2350.0, 129018.0], [2542.0, 129027.0], [2510.0, 129020.0], [2446.0, 131060.0], [2622.0, 130050.0], [2606.0, 129985.0], [2590.0, 129022.0], [2814.0, 129461.0], [2846.0, 129501.0], [2926.0, 128651.0], [2878.0, 131068.0], [2862.0, 129009.0], [2830.0, 129025.0], [3070.0, 131098.0], [3038.0, 130416.5], [2958.0, 130889.0], [3198.0, 130071.0], [3182.0, 129947.0], [3150.0, 128211.0], [3086.0, 128609.0], [3134.0, 129031.0], [3118.0, 131059.0], [3166.0, 129033.0], [3326.0, 129734.0], [3278.0, 129843.0], [3310.0, 129071.0], [3262.0, 128947.0], [3246.0, 129037.0], [3294.0, 131068.0], [3454.0, 129449.0], [3438.0, 128254.0], [3406.0, 129736.45945945947], [3358.0, 130206.0], [3342.0, 128527.0], [3390.0, 128929.0], [3374.0, 129742.0], [3422.0, 129039.0], [3502.0, 131161.5], [3550.0, 130381.16666666667], [3582.0, 129025.0], [3486.0, 131194.0], [3518.0, 129065.0], [3694.0, 131063.0], [3678.0, 129014.0], [3726.0, 130851.33333333333], [3838.0, 129071.0], [3758.0, 131016.0], [3742.0, 131068.0], [3902.0, 131005.0], [3886.0, 129035.0], [3870.0, 129219.0], [3966.0, 129355.7], [3918.0, 130979.0], [3934.0, 129295.0], [3950.0, 129247.0], [3998.0, 130054.53333333333], [3982.0, 130144.0], [2127.0, 129015.0], [2111.0, 129041.0], [2079.0, 129012.0], [2063.0, 131060.0], [2303.0, 129024.0], [2287.0, 129026.0], [2255.0, 129026.0], [2239.0, 131050.0], [2207.0, 129023.0], [2223.0, 129025.0], [2415.0, 129029.0], [2431.0, 129017.0], [2335.0, 131078.0], [2399.0, 129042.0], [2383.0, 129020.5], [2367.0, 129030.0], [2351.0, 129017.0], [2559.0, 131059.0], [2543.0, 129020.0], [2511.0, 129021.0], [2623.0, 130828.0], [2607.0, 129020.0], [2591.0, 129022.0], [2575.0, 129536.0], [2815.0, 129562.0], [2943.0, 129135.0], [2927.0, 128252.0], [2911.0, 129521.07142857142], [2879.0, 131061.0], [2831.0, 130057.0], [2847.0, 129599.0], [2863.0, 130239.0], [3071.0, 129038.0], [3055.0, 131063.5], [2959.0, 131069.0], [3039.0, 131140.0], [3199.0, 130040.0], [3151.0, 128955.0], [3183.0, 130898.0], [3103.0, 129511.5], [3087.0, 128209.0], [3135.0, 129050.0], [3119.0, 131055.0], [3167.0, 129037.0], [3311.0, 129071.0], [3279.0, 131076.0], [3327.0, 129395.0], [3263.0, 129601.0], [3247.0, 129037.0], [3343.0, 129930.0], [3407.0, 129901.10714285716], [3391.0, 130178.0], [3359.0, 130703.0], [3375.0, 131092.0], [3439.0, 131074.0], [3423.0, 129038.0], [3583.0, 130680.66666666667], [3519.0, 129057.0], [3487.0, 131156.0], [3503.0, 131169.0], [3551.0, 129047.0], [3535.0, 129064.5], [3711.0, 130051.5], [3695.0, 131063.0], [3839.0, 129415.66666666667], [3759.0, 131020.0], [3743.0, 131070.0], [3727.0, 131069.0], [3951.0, 129249.4], [3919.0, 130247.32558139536], [3935.0, 129284.75], [3967.0, 129308.8], [3871.0, 130021.5], [3855.0, 129310.66666666667], [3903.0, 131001.0], [3887.0, 129039.0], [3999.0, 130052.0], [3983.0, 130128.0], [1.0, 131062.0]], "isOverall": false, "label": "Portal_01_LaunchHomepage", "isController": false}, {"data": [[1307.358665394099, 41339.8259762982]], "isOverall": false, "label": "Portal_01_LaunchHomepage-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6712868E12, "maxY": 413684.3333333333, "series": [{"data": [[1.67128686E12, 413684.3333333333], [1.67128716E12, 55887.75], [1.67128698E12, 68145.0], [1.6712868E12, 318509.7833333333], [1.6712871E12, 114457.0], [1.67128722E12, 64206.75], [1.67128704E12, 53144.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67128686E12, 0.0], [1.67128716E12, 0.0], [1.67128698E12, 0.0], [1.6712868E12, 62.78333333333333], [1.6712871E12, 0.0], [1.67128722E12, 0.0], [1.67128704E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67128722E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 14.227297152068799, "minX": 1.6712868E12, "maxY": 130276.43311688308, "series": [{"data": [[1.67128686E12, 171.0044522675504], [1.67128716E12, 129838.70625494848], [1.67128698E12, 130276.43311688308], [1.6712868E12, 14.227297152068799], [1.6712871E12, 126870.02549246802], [1.67128722E12, 130198.52515506542], [1.67128704E12, 129706.2830974187]], "isOverall": false, "label": "Portal_01_LaunchHomepage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67128722E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6712868E12, "maxY": 0.11082751209027382, "series": [{"data": [[1.67128686E12, 0.0], [1.67128716E12, 0.0], [1.67128698E12, 0.0], [1.6712868E12, 0.11082751209027382], [1.6712871E12, 0.0], [1.67128722E12, 0.0], [1.67128704E12, 0.0]], "isOverall": false, "label": "Portal_01_LaunchHomepage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67128722E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 7.949489521762467, "minX": 1.6712868E12, "maxY": 130198.44383184006, "series": [{"data": [[1.67128686E12, 160.2961275626425], [1.67128716E12, 129838.63974663499], [1.67128698E12, 130198.12792207791], [1.6712868E12, 7.949489521762467], [1.6712871E12, 126869.0926998841], [1.67128722E12, 130198.44383184006], [1.67128704E12, 129706.17735220639]], "isOverall": false, "label": "Portal_01_LaunchHomepage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67128722E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.6712868E12, "maxY": 131328.0, "series": [{"data": [[1.67128686E12, 3300.0], [1.67128716E12, 131094.0], [1.67128698E12, 131328.0], [1.6712868E12, 1032.0], [1.6712871E12, 131282.0], [1.67128722E12, 131230.0], [1.67128704E12, 131206.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67128686E12, 1017.0], [1.67128716E12, 131073.0], [1.67128698E12, 131058.7], [1.6712868E12, 26.0], [1.6712871E12, 131067.0], [1.67128722E12, 131076.0], [1.67128704E12, 130822.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67128686E12, 3040.41], [1.67128716E12, 131085.0], [1.67128698E12, 131317.59], [1.6712868E12, 174.0], [1.6712871E12, 131174.1], [1.67128722E12, 131202.0], [1.67128704E12, 131175.92]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67128686E12, 1083.0], [1.67128716E12, 131076.8], [1.67128698E12, 131211.0], [1.6712868E12, 64.0], [1.6712871E12, 131087.0], [1.67128722E12, 131099.4], [1.67128704E12, 130992.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67128686E12, 1.0], [1.67128716E12, 128183.0], [1.67128698E12, 129172.0], [1.6712868E12, 1.0], [1.6712871E12, 21.0], [1.67128722E12, 128458.0], [1.67128704E12, 128177.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67128686E12, 9.0], [1.67128716E12, 129032.0], [1.67128698E12, 130158.5], [1.6712868E12, 4.0], [1.6712871E12, 129365.0], [1.67128722E12, 130755.0], [1.67128704E12, 129703.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67128722E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 3.0, "maxY": 131063.0, "series": [{"data": [[561.0, 5.0], [598.0, 7.0], [582.0, 3.0], [603.0, 6.0], [584.0, 10.0], [652.0, 7.0], [698.0, 7.0], [732.0, 12.0], [712.0, 6.0], [709.0, 6.0], [784.0, 12.0], [3.0, 130302.0], [987.0, 161.0], [4.0, 129380.5], [7.0, 129849.0], [12.0, 129054.5], [15.0, 131056.0], [17.0, 10.0], [18.0, 129888.0], [26.0, 131063.0], [28.0, 129022.5], [29.0, 131046.0], [30.0, 129042.5], [33.0, 129742.0], [35.0, 129611.5], [34.0, 129418.0], [36.0, 129023.5], [37.0, 129743.5], [39.0, 129425.0], [38.0, 129402.0], [40.0, 129634.0], [41.0, 129905.0], [43.0, 129370.5], [42.0, 129041.0], [44.0, 129552.0], [45.0, 129541.0], [46.0, 129625.5], [48.0, 129030.0], [49.0, 129464.0], [51.0, 129041.0], [50.0, 130791.5], [53.0, 129030.0], [54.0, 65618.5], [55.0, 128997.0], [57.0, 64485.0], [58.0, 129033.0], [60.0, 129381.5], [67.0, 131039.0], [74.0, 129211.5], [77.0, 130291.0], [76.0, 129272.5], [79.0, 129046.0], [78.0, 129626.5], [81.0, 129371.5], [86.0, 129767.5], [89.0, 129297.0], [97.0, 129033.0], [98.0, 129365.0], [119.0, 8.0], [122.0, 4.0], [123.0, 65565.0], [135.0, 5.0], [130.0, 1228.5], [146.0, 8.0], [160.0, 3.0], [161.0, 130921.0], [170.0, 129974.5], [177.0, 4.0], [190.0, 5.0], [196.0, 4.0], [193.0, 26.0], [208.0, 7.0], [216.0, 129810.5], [226.0, 129706.0], [238.0, 130694.0], [234.0, 129075.0], [246.0, 10.0], [257.0, 64674.5], [271.0, 3.0], [303.0, 4.0], [317.0, 3.0], [326.0, 30.0], [337.0, 5.0], [396.0, 3.0], [407.0, 6.0], [413.0, 130681.0], [425.0, 25.0], [431.0, 4.0], [447.0, 4.0], [457.0, 3.0], [473.0, 3.0], [477.0, 15.0], [474.0, 130014.0], [501.0, 2.0], [498.0, 24.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 987.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 4.9E-324, "series": [{"data": [[561.0, 0.0], [598.0, 0.0], [582.0, 0.0], [603.0, 0.0], [584.0, 0.0], [652.0, 0.0], [698.0, 0.0], [732.0, 0.0], [712.0, 0.0], [709.0, 0.0], [784.0, 0.0], [3.0, 0.0], [987.0, 0.0], [4.0, 0.0], [7.0, 0.0], [12.0, 0.0], [15.0, 0.0], [17.0, 0.0], [18.0, 0.0], [26.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 0.0], [33.0, 0.0], [35.0, 0.0], [34.0, 0.0], [36.0, 0.0], [37.0, 0.0], [39.0, 0.0], [38.0, 0.0], [40.0, 0.0], [41.0, 0.0], [43.0, 0.0], [42.0, 0.0], [44.0, 0.0], [45.0, 0.0], [46.0, 0.0], [48.0, 0.0], [49.0, 0.0], [51.0, 0.0], [50.0, 0.0], [53.0, 0.0], [54.0, 0.0], [55.0, 0.0], [57.0, 0.0], [58.0, 0.0], [60.0, 0.0], [67.0, 0.0], [74.0, 0.0], [77.0, 0.0], [76.0, 0.0], [79.0, 0.0], [78.0, 0.0], [81.0, 0.0], [86.0, 0.0], [89.0, 0.0], [97.0, 0.0], [98.0, 0.0], [119.0, 0.0], [122.0, 0.0], [123.0, 0.0], [135.0, 0.0], [130.0, 0.0], [146.0, 0.0], [160.0, 0.0], [161.0, 0.0], [170.0, 0.0], [177.0, 0.0], [190.0, 0.0], [196.0, 0.0], [193.0, 0.0], [208.0, 0.0], [216.0, 0.0], [226.0, 0.0], [238.0, 0.0], [234.0, 0.0], [246.0, 0.0], [257.0, 0.0], [271.0, 0.0], [303.0, 0.0], [317.0, 0.0], [326.0, 0.0], [337.0, 0.0], [396.0, 0.0], [407.0, 0.0], [413.0, 0.0], [425.0, 0.0], [431.0, 0.0], [447.0, 0.0], [457.0, 0.0], [473.0, 0.0], [477.0, 0.0], [474.0, 0.0], [501.0, 0.0], [498.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 987.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.6712868E12, "maxY": 189.65, "series": [{"data": [[1.67128686E12, 189.65], [1.67128698E12, 43.38333333333333], [1.6712868E12, 124.33333333333333], [1.6712871E12, 21.716666666666665], [1.67128692E12, 20.0], [1.67128704E12, 20.016666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6712871E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.6712868E12, "maxY": 160.96666666666667, "series": [{"data": [[1.6712868E12, 0.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.67128686E12, 160.96666666666667], [1.6712868E12, 123.91666666666667], [1.6712871E12, 1.25]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.67128716E12, 21.05], [1.67128698E12, 25.666666666666668], [1.6712871E12, 41.9], [1.67128722E12, 24.183333333333334], [1.67128704E12, 20.016666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67128722E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 20.016666666666666, "minX": 1.6712868E12, "maxY": 160.96666666666667, "series": [{"data": [[1.67128686E12, 160.96666666666667], [1.67128716E12, 21.05], [1.67128698E12, 25.666666666666668], [1.6712868E12, 124.06666666666666], [1.6712871E12, 43.15], [1.67128722E12, 24.183333333333334], [1.67128704E12, 20.016666666666666]], "isOverall": false, "label": "Portal_01_LaunchHomepage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67128722E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 20.016666666666666, "minX": 1.6712868E12, "maxY": 160.96666666666667, "series": [{"data": [[1.67128686E12, 160.96666666666667], [1.67128716E12, 21.05], [1.67128698E12, 25.666666666666668], [1.6712868E12, 124.06666666666666], [1.6712871E12, 43.15], [1.67128722E12, 24.183333333333334], [1.67128704E12, 20.016666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67128722E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

